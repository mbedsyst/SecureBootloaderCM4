
BOOT0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001328  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000006d0  080014c8  080014c8  000024c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001b98  08001b98  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001b98  08001b98  00002b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001ba0  08001ba0  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ba0  08001ba0  00002ba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001ba4  08001ba4  00002ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001ba8  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001c04  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001c04  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001894  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000089c  00000000  00000000  00004920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000230  00000000  00000000  000051c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000017d  00000000  00000000  000053f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000fd35  00000000  00000000  0000556d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002d3a  00000000  00000000  000152a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000556c1  00000000  00000000  00017fdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0006d69d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000e34  00000000  00000000  0006d6e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000059  00000000  00000000  0006e514  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080014b0 	.word	0x080014b0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080014b0 	.word	0x080014b0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <BOOT_PrintBanner>:
#include "Drivers/CRC.h"

static app_Metadata applicationMetadata;

void BOOT_PrintBanner(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0

	printf(" ______  ______  ______  ______  ______  ______  ______  ______  ______  ______  ______ \n\r");
 8000284:	4817      	ldr	r0, [pc, #92]	@ (80002e4 <BOOT_PrintBanner+0x64>)
 8000286:	f000 faa5 	bl	80007d4 <iprintf>
	printf("|______||______||______||______||______||______||______||______||______||______||______|\n\r");
 800028a:	4817      	ldr	r0, [pc, #92]	@ (80002e8 <BOOT_PrintBanner+0x68>)
 800028c:	f000 faa2 	bl	80007d4 <iprintf>
	printf("                                                                                        \n\r");
 8000290:	4816      	ldr	r0, [pc, #88]	@ (80002ec <BOOT_PrintBanner+0x6c>)
 8000292:	f000 fa9f 	bl	80007d4 <iprintf>
	printf("   ███████ ███████  ██████ ██    ██ ██████  ███████ ██████   ██████   ██████  ████████  \n\r");
 8000296:	4816      	ldr	r0, [pc, #88]	@ (80002f0 <BOOT_PrintBanner+0x70>)
 8000298:	f000 fa9c 	bl	80007d4 <iprintf>
	printf("   ██      ██      ██      ██    ██ ██   ██ ██      ██   ██ ██    ██ ██    ██    ██     \n\r");
 800029c:	4815      	ldr	r0, [pc, #84]	@ (80002f4 <BOOT_PrintBanner+0x74>)
 800029e:	f000 fa99 	bl	80007d4 <iprintf>
	printf("   ███████ █████   ██      ██    ██ ██████  █████   ██████  ██    ██ ██    ██    ██     \n\r");
 80002a2:	4815      	ldr	r0, [pc, #84]	@ (80002f8 <BOOT_PrintBanner+0x78>)
 80002a4:	f000 fa96 	bl	80007d4 <iprintf>
	printf("        ██ ██      ██      ██    ██ ██   ██ ██      ██   ██ ██    ██ ██    ██    ██     \n\r");
 80002a8:	4814      	ldr	r0, [pc, #80]	@ (80002fc <BOOT_PrintBanner+0x7c>)
 80002aa:	f000 fa93 	bl	80007d4 <iprintf>
	printf("   ███████ ███████  ██████  ██████  ██   ██ ███████ ██████   ██████   ██████     ██     \n\r");
 80002ae:	4814      	ldr	r0, [pc, #80]	@ (8000300 <BOOT_PrintBanner+0x80>)
 80002b0:	f000 fa90 	bl	80007d4 <iprintf>
	printf("                                                                                        \n\r");
 80002b4:	480d      	ldr	r0, [pc, #52]	@ (80002ec <BOOT_PrintBanner+0x6c>)
 80002b6:	f000 fa8d 	bl	80007d4 <iprintf>
	printf(" ______  ______  ______  ______  ______  ______  ______  ______  ______  ______  ______ \n\r");
 80002ba:	480a      	ldr	r0, [pc, #40]	@ (80002e4 <BOOT_PrintBanner+0x64>)
 80002bc:	f000 fa8a 	bl	80007d4 <iprintf>
	printf("|______||______||______||______||______||______||______||______||______||______||______|\n\r");
 80002c0:	4809      	ldr	r0, [pc, #36]	@ (80002e8 <BOOT_PrintBanner+0x68>)
 80002c2:	f000 fa87 	bl	80007d4 <iprintf>
	printf("                                                                                        \n\r");
 80002c6:	4809      	ldr	r0, [pc, #36]	@ (80002ec <BOOT_PrintBanner+0x6c>)
 80002c8:	f000 fa84 	bl	80007d4 <iprintf>
	printf("                                                                                        \n\r");
 80002cc:	4807      	ldr	r0, [pc, #28]	@ (80002ec <BOOT_PrintBanner+0x6c>)
 80002ce:	f000 fa81 	bl	80007d4 <iprintf>
	printf("                                                                                        \n\r");
 80002d2:	4806      	ldr	r0, [pc, #24]	@ (80002ec <BOOT_PrintBanner+0x6c>)
 80002d4:	f000 fa7e 	bl	80007d4 <iprintf>
	printf("[info] Initializing Bootloader.\n\r");
 80002d8:	480a      	ldr	r0, [pc, #40]	@ (8000304 <BOOT_PrintBanner+0x84>)
 80002da:	f000 fa7b 	bl	80007d4 <iprintf>

}
 80002de:	bf00      	nop
 80002e0:	bd80      	pop	{r7, pc}
 80002e2:	bf00      	nop
 80002e4:	080014c8 	.word	0x080014c8
 80002e8:	08001524 	.word	0x08001524
 80002ec:	08001580 	.word	0x08001580
 80002f0:	080015dc 	.word	0x080015dc
 80002f4:	080016b8 	.word	0x080016b8
 80002f8:	08001750 	.word	0x08001750
 80002fc:	08001808 	.word	0x08001808
 8000300:	080018a0 	.word	0x080018a0
 8000304:	08001970 	.word	0x08001970

08000308 <BOOT_Init>:

void BOOT_Init(void)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0
	LED_Init();
 800030c:	f000 f8ae 	bl	800046c <LED_Init>
	UART2_Init();
 8000310:	f000 f904 	bl	800051c <UART2_Init>
	CRC_Init();
 8000314:	f000 f892 	bl	800043c <CRC_Init>

}
 8000318:	bf00      	nop
 800031a:	bd80      	pop	{r7, pc}

0800031c <main>:
#include "main.h"

int main()
{
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0
	BOOT_Init();
 8000320:	f7ff fff2 	bl	8000308 <BOOT_Init>
	BOOT_PrintBanner();
 8000324:	f7ff ffac 	bl	8000280 <BOOT_PrintBanner>
	else
	{
		BOOT_HandleErrors();
	}
*/
	while(1)
 8000328:	bf00      	nop
 800032a:	e7fd      	b.n	8000328 <main+0xc>

0800032c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800032c:	b580      	push	{r7, lr}
 800032e:	b086      	sub	sp, #24
 8000330:	af00      	add	r7, sp, #0
 8000332:	60f8      	str	r0, [r7, #12]
 8000334:	60b9      	str	r1, [r7, #8]
 8000336:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000338:	2300      	movs	r3, #0
 800033a:	617b      	str	r3, [r7, #20]
 800033c:	e00a      	b.n	8000354 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800033e:	f3af 8000 	nop.w
 8000342:	4601      	mov	r1, r0
 8000344:	68bb      	ldr	r3, [r7, #8]
 8000346:	1c5a      	adds	r2, r3, #1
 8000348:	60ba      	str	r2, [r7, #8]
 800034a:	b2ca      	uxtb	r2, r1
 800034c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034e:	697b      	ldr	r3, [r7, #20]
 8000350:	3301      	adds	r3, #1
 8000352:	617b      	str	r3, [r7, #20]
 8000354:	697a      	ldr	r2, [r7, #20]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	429a      	cmp	r2, r3
 800035a:	dbf0      	blt.n	800033e <_read+0x12>
  }

  return len;
 800035c:	687b      	ldr	r3, [r7, #4]
}
 800035e:	4618      	mov	r0, r3
 8000360:	3718      	adds	r7, #24
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}

08000366 <_close>:
  }
  return len;
}

int _close(int file)
{
 8000366:	b480      	push	{r7}
 8000368:	b083      	sub	sp, #12
 800036a:	af00      	add	r7, sp, #0
 800036c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800036e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr

0800037e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
 8000386:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000388:	683b      	ldr	r3, [r7, #0]
 800038a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800038e:	605a      	str	r2, [r3, #4]
  return 0;
 8000390:	2300      	movs	r3, #0
}
 8000392:	4618      	mov	r0, r3
 8000394:	370c      	adds	r7, #12
 8000396:	46bd      	mov	sp, r7
 8000398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039c:	4770      	bx	lr

0800039e <_isatty>:

int _isatty(int file)
{
 800039e:	b480      	push	{r7}
 80003a0:	b083      	sub	sp, #12
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003a6:	2301      	movs	r3, #1
}
 80003a8:	4618      	mov	r0, r3
 80003aa:	370c      	adds	r7, #12
 80003ac:	46bd      	mov	sp, r7
 80003ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b2:	4770      	bx	lr

080003b4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b085      	sub	sp, #20
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	60f8      	str	r0, [r7, #12]
 80003bc:	60b9      	str	r1, [r7, #8]
 80003be:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003c0:	2300      	movs	r3, #0
}
 80003c2:	4618      	mov	r0, r3
 80003c4:	3714      	adds	r7, #20
 80003c6:	46bd      	mov	sp, r7
 80003c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003cc:	4770      	bx	lr
	...

080003d0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003d0:	b580      	push	{r7, lr}
 80003d2:	b086      	sub	sp, #24
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d8:	4a14      	ldr	r2, [pc, #80]	@ (800042c <_sbrk+0x5c>)
 80003da:	4b15      	ldr	r3, [pc, #84]	@ (8000430 <_sbrk+0x60>)
 80003dc:	1ad3      	subs	r3, r2, r3
 80003de:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003e0:	697b      	ldr	r3, [r7, #20]
 80003e2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003e4:	4b13      	ldr	r3, [pc, #76]	@ (8000434 <_sbrk+0x64>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	2b00      	cmp	r3, #0
 80003ea:	d102      	bne.n	80003f2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003ec:	4b11      	ldr	r3, [pc, #68]	@ (8000434 <_sbrk+0x64>)
 80003ee:	4a12      	ldr	r2, [pc, #72]	@ (8000438 <_sbrk+0x68>)
 80003f0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003f2:	4b10      	ldr	r3, [pc, #64]	@ (8000434 <_sbrk+0x64>)
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4413      	add	r3, r2
 80003fa:	693a      	ldr	r2, [r7, #16]
 80003fc:	429a      	cmp	r2, r3
 80003fe:	d207      	bcs.n	8000410 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000400:	f000 fa8c 	bl	800091c <__errno>
 8000404:	4603      	mov	r3, r0
 8000406:	220c      	movs	r2, #12
 8000408:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800040a:	f04f 33ff 	mov.w	r3, #4294967295
 800040e:	e009      	b.n	8000424 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000410:	4b08      	ldr	r3, [pc, #32]	@ (8000434 <_sbrk+0x64>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000416:	4b07      	ldr	r3, [pc, #28]	@ (8000434 <_sbrk+0x64>)
 8000418:	681a      	ldr	r2, [r3, #0]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4413      	add	r3, r2
 800041e:	4a05      	ldr	r2, [pc, #20]	@ (8000434 <_sbrk+0x64>)
 8000420:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000422:	68fb      	ldr	r3, [r7, #12]
}
 8000424:	4618      	mov	r0, r3
 8000426:	3718      	adds	r7, #24
 8000428:	46bd      	mov	sp, r7
 800042a:	bd80      	pop	{r7, pc}
 800042c:	20018000 	.word	0x20018000
 8000430:	00000400 	.word	0x00000400
 8000434:	20000078 	.word	0x20000078
 8000438:	200001c8 	.word	0x200001c8

0800043c <CRC_Init>:
#include "Drivers/CRC.h"

void CRC_Init(void)
{
 800043c:	b480      	push	{r7}
 800043e:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= RCC_AHB1ENR_CRCEN;
 8000440:	4b08      	ldr	r3, [pc, #32]	@ (8000464 <CRC_Init+0x28>)
 8000442:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000444:	4a07      	ldr	r2, [pc, #28]	@ (8000464 <CRC_Init+0x28>)
 8000446:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800044a:	6313      	str	r3, [r2, #48]	@ 0x30
	CRC->CR |= CRC_CR_RESET;
 800044c:	4b06      	ldr	r3, [pc, #24]	@ (8000468 <CRC_Init+0x2c>)
 800044e:	689b      	ldr	r3, [r3, #8]
 8000450:	4a05      	ldr	r2, [pc, #20]	@ (8000468 <CRC_Init+0x2c>)
 8000452:	f043 0301 	orr.w	r3, r3, #1
 8000456:	6093      	str	r3, [r2, #8]
}
 8000458:	bf00      	nop
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
 8000462:	bf00      	nop
 8000464:	40023800 	.word	0x40023800
 8000468:	40023000 	.word	0x40023000

0800046c <LED_Init>:
#include "Drivers/LED.h"

void LED_Init(void)
{
 800046c:	b480      	push	{r7}
 800046e:	af00      	add	r7, sp, #0
    RCC->AHB1ENR	|= RCC_AHB1ENR_GPIOAEN;
 8000470:	4b14      	ldr	r3, [pc, #80]	@ (80004c4 <LED_Init+0x58>)
 8000472:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000474:	4a13      	ldr	r2, [pc, #76]	@ (80004c4 <LED_Init+0x58>)
 8000476:	f043 0301 	orr.w	r3, r3, #1
 800047a:	6313      	str	r3, [r2, #48]	@ 0x30
    GPIOA->MODER	&=~(3U<<10);  	// Clear mode bits for PA5
 800047c:	4b12      	ldr	r3, [pc, #72]	@ (80004c8 <LED_Init+0x5c>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4a11      	ldr	r2, [pc, #68]	@ (80004c8 <LED_Init+0x5c>)
 8000482:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8000486:	6013      	str	r3, [r2, #0]
    GPIOA->MODER	|= (1U<<10);   	// Set PA5 as output (01)
 8000488:	4b0f      	ldr	r3, [pc, #60]	@ (80004c8 <LED_Init+0x5c>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4a0e      	ldr	r2, [pc, #56]	@ (80004c8 <LED_Init+0x5c>)
 800048e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000492:	6013      	str	r3, [r2, #0]
    GPIOA->OTYPER	&=~(1U<<5);     // Set PA5 as push-pull
 8000494:	4b0c      	ldr	r3, [pc, #48]	@ (80004c8 <LED_Init+0x5c>)
 8000496:	685b      	ldr	r3, [r3, #4]
 8000498:	4a0b      	ldr	r2, [pc, #44]	@ (80004c8 <LED_Init+0x5c>)
 800049a:	f023 0320 	bic.w	r3, r3, #32
 800049e:	6053      	str	r3, [r2, #4]
    GPIOA->OSPEEDR	|= (3U<<10); 	// High speed for PA5
 80004a0:	4b09      	ldr	r3, [pc, #36]	@ (80004c8 <LED_Init+0x5c>)
 80004a2:	689b      	ldr	r3, [r3, #8]
 80004a4:	4a08      	ldr	r2, [pc, #32]	@ (80004c8 <LED_Init+0x5c>)
 80004a6:	f443 6340 	orr.w	r3, r3, #3072	@ 0xc00
 80004aa:	6093      	str	r3, [r2, #8]
    GPIOA->PUPDR	&=~(3U<<10);  	// No pull-up/pull-down for PA5
 80004ac:	4b06      	ldr	r3, [pc, #24]	@ (80004c8 <LED_Init+0x5c>)
 80004ae:	68db      	ldr	r3, [r3, #12]
 80004b0:	4a05      	ldr	r2, [pc, #20]	@ (80004c8 <LED_Init+0x5c>)
 80004b2:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 80004b6:	60d3      	str	r3, [r2, #12]
}
 80004b8:	bf00      	nop
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	40023800 	.word	0x40023800
 80004c8:	40020000 	.word	0x40020000

080004cc <Compute_UART_Baud>:
#define APB1_CLK		SYS_FREQ

void UART2_Write(int ch);

static uint16_t Compute_UART_Baud(uint32_t periph_clk, uint32_t baudrate)
{
 80004cc:	b480      	push	{r7}
 80004ce:	b083      	sub	sp, #12
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	6078      	str	r0, [r7, #4]
 80004d4:	6039      	str	r1, [r7, #0]
	return ((periph_clk + (baudrate/2U))/baudrate);
 80004d6:	683b      	ldr	r3, [r7, #0]
 80004d8:	085a      	lsrs	r2, r3, #1
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	441a      	add	r2, r3
 80004de:	683b      	ldr	r3, [r7, #0]
 80004e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80004e4:	b29b      	uxth	r3, r3
}
 80004e6:	4618      	mov	r0, r3
 80004e8:	370c      	adds	r7, #12
 80004ea:	46bd      	mov	sp, r7
 80004ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f0:	4770      	bx	lr
	...

080004f4 <UART2_SetBaudRate>:

static void UART2_SetBaudRate(uint32_t periph_clk, uint32_t baudrate)
{
 80004f4:	b580      	push	{r7, lr}
 80004f6:	b082      	sub	sp, #8
 80004f8:	af00      	add	r7, sp, #0
 80004fa:	6078      	str	r0, [r7, #4]
 80004fc:	6039      	str	r1, [r7, #0]
	USART2->BRR = Compute_UART_Baud(periph_clk,baudrate);
 80004fe:	6839      	ldr	r1, [r7, #0]
 8000500:	6878      	ldr	r0, [r7, #4]
 8000502:	f7ff ffe3 	bl	80004cc <Compute_UART_Baud>
 8000506:	4603      	mov	r3, r0
 8000508:	461a      	mov	r2, r3
 800050a:	4b03      	ldr	r3, [pc, #12]	@ (8000518 <UART2_SetBaudRate+0x24>)
 800050c:	609a      	str	r2, [r3, #8]
}
 800050e:	bf00      	nop
 8000510:	3708      	adds	r7, #8
 8000512:	46bd      	mov	sp, r7
 8000514:	bd80      	pop	{r7, pc}
 8000516:	bf00      	nop
 8000518:	40004400 	.word	0x40004400

0800051c <UART2_Init>:

void UART2_Init(void)
{
 800051c:	b580      	push	{r7, lr}
 800051e:	af00      	add	r7, sp, #0
	/*Enable clock access to GPIOA*/
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8000520:	4b18      	ldr	r3, [pc, #96]	@ (8000584 <UART2_Init+0x68>)
 8000522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000524:	4a17      	ldr	r2, [pc, #92]	@ (8000584 <UART2_Init+0x68>)
 8000526:	f043 0301 	orr.w	r3, r3, #1
 800052a:	6313      	str	r3, [r2, #48]	@ 0x30
	/*Enable clock access to UART2*/
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 800052c:	4b15      	ldr	r3, [pc, #84]	@ (8000584 <UART2_Init+0x68>)
 800052e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000530:	4a14      	ldr	r2, [pc, #80]	@ (8000584 <UART2_Init+0x68>)
 8000532:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000536:	6413      	str	r3, [r2, #64]	@ 0x40
	/*Set PA2 mode to alternate function mode */
	GPIOA->MODER &=~(1U<<4);
 8000538:	4b13      	ldr	r3, [pc, #76]	@ (8000588 <UART2_Init+0x6c>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4a12      	ldr	r2, [pc, #72]	@ (8000588 <UART2_Init+0x6c>)
 800053e:	f023 0310 	bic.w	r3, r3, #16
 8000542:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U<<5);
 8000544:	4b10      	ldr	r3, [pc, #64]	@ (8000588 <UART2_Init+0x6c>)
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a0f      	ldr	r2, [pc, #60]	@ (8000588 <UART2_Init+0x6c>)
 800054a:	f043 0320 	orr.w	r3, r3, #32
 800054e:	6013      	str	r3, [r2, #0]
	/*Set PA2 alternate function type to UART_TX(AF07)*/
	GPIOA->AFR[0] |=(0x7<<8);
 8000550:	4b0d      	ldr	r3, [pc, #52]	@ (8000588 <UART2_Init+0x6c>)
 8000552:	6a1b      	ldr	r3, [r3, #32]
 8000554:	4a0c      	ldr	r2, [pc, #48]	@ (8000588 <UART2_Init+0x6c>)
 8000556:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 800055a:	6213      	str	r3, [r2, #32]
	/*Configure Baud Rate*/
	UART2_SetBaudRate(APB1_CLK,UART_BAUDRATE);
 800055c:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
 8000560:	480a      	ldr	r0, [pc, #40]	@ (800058c <UART2_Init+0x70>)
 8000562:	f7ff ffc7 	bl	80004f4 <UART2_SetBaudRate>
	/*Configure the Transfer directions*/
	USART2->CR1 |= (USART_CR1_TE | USART_CR1_RE);
 8000566:	4b0a      	ldr	r3, [pc, #40]	@ (8000590 <UART2_Init+0x74>)
 8000568:	68db      	ldr	r3, [r3, #12]
 800056a:	4a09      	ldr	r2, [pc, #36]	@ (8000590 <UART2_Init+0x74>)
 800056c:	f043 030c 	orr.w	r3, r3, #12
 8000570:	60d3      	str	r3, [r2, #12]
	/*Enable UART module*/
	USART2->CR1 |= USART_CR1_UE;
 8000572:	4b07      	ldr	r3, [pc, #28]	@ (8000590 <UART2_Init+0x74>)
 8000574:	68db      	ldr	r3, [r3, #12]
 8000576:	4a06      	ldr	r2, [pc, #24]	@ (8000590 <UART2_Init+0x74>)
 8000578:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800057c:	60d3      	str	r3, [r2, #12]
}
 800057e:	bf00      	nop
 8000580:	bd80      	pop	{r7, pc}
 8000582:	bf00      	nop
 8000584:	40023800 	.word	0x40023800
 8000588:	40020000 	.word	0x40020000
 800058c:	00f42400 	.word	0x00f42400
 8000590:	40004400 	.word	0x40004400

08000594 <UART2_TxChar>:
	RCC->AHB1ENR &= ~RCC_AHB1ENR_GPIOAEN;
	RCC->APB1ENR &= ~RCC_APB1ENR_USART2EN;
}

void UART2_TxChar(char ch)
{
 8000594:	b480      	push	{r7}
 8000596:	b083      	sub	sp, #12
 8000598:	af00      	add	r7, sp, #0
 800059a:	4603      	mov	r3, r0
 800059c:	71fb      	strb	r3, [r7, #7]
	/*Wait for Transmit Data Register to be empty*/
	while(!(USART2->SR & USART_SR_TXE));
 800059e:	bf00      	nop
 80005a0:	4b07      	ldr	r3, [pc, #28]	@ (80005c0 <UART2_TxChar+0x2c>)
 80005a2:	681b      	ldr	r3, [r3, #0]
 80005a4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80005a8:	2b00      	cmp	r3, #0
 80005aa:	d0f9      	beq.n	80005a0 <UART2_TxChar+0xc>
	/*Write to the Transmit Data Register*/
	USART2->DR = (ch &0xFF);
 80005ac:	4a04      	ldr	r2, [pc, #16]	@ (80005c0 <UART2_TxChar+0x2c>)
 80005ae:	79fb      	ldrb	r3, [r7, #7]
 80005b0:	6053      	str	r3, [r2, #4]
}
 80005b2:	bf00      	nop
 80005b4:	370c      	adds	r7, #12
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop
 80005c0:	40004400 	.word	0x40004400

080005c4 <_write>:
	while(!(USART2->SR & (1<<5)));
	return USART2->DR;
}

int _write(int file, char *ptr, int len)
{
 80005c4:	b580      	push	{r7, lr}
 80005c6:	b086      	sub	sp, #24
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	60f8      	str	r0, [r7, #12]
 80005cc:	60b9      	str	r1, [r7, #8]
 80005ce:	607a      	str	r2, [r7, #4]
    for (int i = 0; i < len; i++)
 80005d0:	2300      	movs	r3, #0
 80005d2:	617b      	str	r3, [r7, #20]
 80005d4:	e009      	b.n	80005ea <_write+0x26>
    {
        UART2_TxChar(ptr[i]);
 80005d6:	697b      	ldr	r3, [r7, #20]
 80005d8:	68ba      	ldr	r2, [r7, #8]
 80005da:	4413      	add	r3, r2
 80005dc:	781b      	ldrb	r3, [r3, #0]
 80005de:	4618      	mov	r0, r3
 80005e0:	f7ff ffd8 	bl	8000594 <UART2_TxChar>
    for (int i = 0; i < len; i++)
 80005e4:	697b      	ldr	r3, [r7, #20]
 80005e6:	3301      	adds	r3, #1
 80005e8:	617b      	str	r3, [r7, #20]
 80005ea:	697a      	ldr	r2, [r7, #20]
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	429a      	cmp	r2, r3
 80005f0:	dbf1      	blt.n	80005d6 <_write+0x12>
    }
    return len;
 80005f2:	687b      	ldr	r3, [r7, #4]
}
 80005f4:	4618      	mov	r0, r3
 80005f6:	3718      	adds	r7, #24
 80005f8:	46bd      	mov	sp, r7
 80005fa:	bd80      	pop	{r7, pc}

080005fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005fc:	480d      	ldr	r0, [pc, #52]	@ (8000634 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005fe:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000600:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000604:	480c      	ldr	r0, [pc, #48]	@ (8000638 <LoopForever+0x6>)
  ldr r1, =_edata
 8000606:	490d      	ldr	r1, [pc, #52]	@ (800063c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000608:	4a0d      	ldr	r2, [pc, #52]	@ (8000640 <LoopForever+0xe>)
  movs r3, #0
 800060a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800060c:	e002      	b.n	8000614 <LoopCopyDataInit>

0800060e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800060e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000610:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000612:	3304      	adds	r3, #4

08000614 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000614:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000616:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000618:	d3f9      	bcc.n	800060e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800061a:	4a0a      	ldr	r2, [pc, #40]	@ (8000644 <LoopForever+0x12>)
  ldr r4, =_ebss
 800061c:	4c0a      	ldr	r4, [pc, #40]	@ (8000648 <LoopForever+0x16>)
  movs r3, #0
 800061e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000620:	e001      	b.n	8000626 <LoopFillZerobss>

08000622 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000622:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000624:	3204      	adds	r2, #4

08000626 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000626:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000628:	d3fb      	bcc.n	8000622 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800062a:	f000 f97d 	bl	8000928 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800062e:	f7ff fe75 	bl	800031c <main>

08000632 <LoopForever>:

LoopForever:
  b LoopForever
 8000632:	e7fe      	b.n	8000632 <LoopForever>
  ldr   r0, =_estack
 8000634:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000638:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800063c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000640:	08001ba8 	.word	0x08001ba8
  ldr r2, =_sbss
 8000644:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000648:	200001c8 	.word	0x200001c8

0800064c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800064c:	e7fe      	b.n	800064c <ADC_IRQHandler>
	...

08000650 <std>:
 8000650:	2300      	movs	r3, #0
 8000652:	b510      	push	{r4, lr}
 8000654:	4604      	mov	r4, r0
 8000656:	e9c0 3300 	strd	r3, r3, [r0]
 800065a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800065e:	6083      	str	r3, [r0, #8]
 8000660:	8181      	strh	r1, [r0, #12]
 8000662:	6643      	str	r3, [r0, #100]	@ 0x64
 8000664:	81c2      	strh	r2, [r0, #14]
 8000666:	6183      	str	r3, [r0, #24]
 8000668:	4619      	mov	r1, r3
 800066a:	2208      	movs	r2, #8
 800066c:	305c      	adds	r0, #92	@ 0x5c
 800066e:	f000 f906 	bl	800087e <memset>
 8000672:	4b0d      	ldr	r3, [pc, #52]	@ (80006a8 <std+0x58>)
 8000674:	6263      	str	r3, [r4, #36]	@ 0x24
 8000676:	4b0d      	ldr	r3, [pc, #52]	@ (80006ac <std+0x5c>)
 8000678:	62a3      	str	r3, [r4, #40]	@ 0x28
 800067a:	4b0d      	ldr	r3, [pc, #52]	@ (80006b0 <std+0x60>)
 800067c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800067e:	4b0d      	ldr	r3, [pc, #52]	@ (80006b4 <std+0x64>)
 8000680:	6323      	str	r3, [r4, #48]	@ 0x30
 8000682:	4b0d      	ldr	r3, [pc, #52]	@ (80006b8 <std+0x68>)
 8000684:	6224      	str	r4, [r4, #32]
 8000686:	429c      	cmp	r4, r3
 8000688:	d006      	beq.n	8000698 <std+0x48>
 800068a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800068e:	4294      	cmp	r4, r2
 8000690:	d002      	beq.n	8000698 <std+0x48>
 8000692:	33d0      	adds	r3, #208	@ 0xd0
 8000694:	429c      	cmp	r4, r3
 8000696:	d105      	bne.n	80006a4 <std+0x54>
 8000698:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800069c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006a0:	f000 b966 	b.w	8000970 <__retarget_lock_init_recursive>
 80006a4:	bd10      	pop	{r4, pc}
 80006a6:	bf00      	nop
 80006a8:	080007f9 	.word	0x080007f9
 80006ac:	0800081b 	.word	0x0800081b
 80006b0:	08000853 	.word	0x08000853
 80006b4:	08000877 	.word	0x08000877
 80006b8:	2000007c 	.word	0x2000007c

080006bc <stdio_exit_handler>:
 80006bc:	4a02      	ldr	r2, [pc, #8]	@ (80006c8 <stdio_exit_handler+0xc>)
 80006be:	4903      	ldr	r1, [pc, #12]	@ (80006cc <stdio_exit_handler+0x10>)
 80006c0:	4803      	ldr	r0, [pc, #12]	@ (80006d0 <stdio_exit_handler+0x14>)
 80006c2:	f000 b869 	b.w	8000798 <_fwalk_sglue>
 80006c6:	bf00      	nop
 80006c8:	20000000 	.word	0x20000000
 80006cc:	08001211 	.word	0x08001211
 80006d0:	20000010 	.word	0x20000010

080006d4 <cleanup_stdio>:
 80006d4:	6841      	ldr	r1, [r0, #4]
 80006d6:	4b0c      	ldr	r3, [pc, #48]	@ (8000708 <cleanup_stdio+0x34>)
 80006d8:	4299      	cmp	r1, r3
 80006da:	b510      	push	{r4, lr}
 80006dc:	4604      	mov	r4, r0
 80006de:	d001      	beq.n	80006e4 <cleanup_stdio+0x10>
 80006e0:	f000 fd96 	bl	8001210 <_fflush_r>
 80006e4:	68a1      	ldr	r1, [r4, #8]
 80006e6:	4b09      	ldr	r3, [pc, #36]	@ (800070c <cleanup_stdio+0x38>)
 80006e8:	4299      	cmp	r1, r3
 80006ea:	d002      	beq.n	80006f2 <cleanup_stdio+0x1e>
 80006ec:	4620      	mov	r0, r4
 80006ee:	f000 fd8f 	bl	8001210 <_fflush_r>
 80006f2:	68e1      	ldr	r1, [r4, #12]
 80006f4:	4b06      	ldr	r3, [pc, #24]	@ (8000710 <cleanup_stdio+0x3c>)
 80006f6:	4299      	cmp	r1, r3
 80006f8:	d004      	beq.n	8000704 <cleanup_stdio+0x30>
 80006fa:	4620      	mov	r0, r4
 80006fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000700:	f000 bd86 	b.w	8001210 <_fflush_r>
 8000704:	bd10      	pop	{r4, pc}
 8000706:	bf00      	nop
 8000708:	2000007c 	.word	0x2000007c
 800070c:	200000e4 	.word	0x200000e4
 8000710:	2000014c 	.word	0x2000014c

08000714 <global_stdio_init.part.0>:
 8000714:	b510      	push	{r4, lr}
 8000716:	4b0b      	ldr	r3, [pc, #44]	@ (8000744 <global_stdio_init.part.0+0x30>)
 8000718:	4c0b      	ldr	r4, [pc, #44]	@ (8000748 <global_stdio_init.part.0+0x34>)
 800071a:	4a0c      	ldr	r2, [pc, #48]	@ (800074c <global_stdio_init.part.0+0x38>)
 800071c:	601a      	str	r2, [r3, #0]
 800071e:	4620      	mov	r0, r4
 8000720:	2200      	movs	r2, #0
 8000722:	2104      	movs	r1, #4
 8000724:	f7ff ff94 	bl	8000650 <std>
 8000728:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800072c:	2201      	movs	r2, #1
 800072e:	2109      	movs	r1, #9
 8000730:	f7ff ff8e 	bl	8000650 <std>
 8000734:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000738:	2202      	movs	r2, #2
 800073a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800073e:	2112      	movs	r1, #18
 8000740:	f7ff bf86 	b.w	8000650 <std>
 8000744:	200001b4 	.word	0x200001b4
 8000748:	2000007c 	.word	0x2000007c
 800074c:	080006bd 	.word	0x080006bd

08000750 <__sfp_lock_acquire>:
 8000750:	4801      	ldr	r0, [pc, #4]	@ (8000758 <__sfp_lock_acquire+0x8>)
 8000752:	f000 b90e 	b.w	8000972 <__retarget_lock_acquire_recursive>
 8000756:	bf00      	nop
 8000758:	200001bd 	.word	0x200001bd

0800075c <__sfp_lock_release>:
 800075c:	4801      	ldr	r0, [pc, #4]	@ (8000764 <__sfp_lock_release+0x8>)
 800075e:	f000 b909 	b.w	8000974 <__retarget_lock_release_recursive>
 8000762:	bf00      	nop
 8000764:	200001bd 	.word	0x200001bd

08000768 <__sinit>:
 8000768:	b510      	push	{r4, lr}
 800076a:	4604      	mov	r4, r0
 800076c:	f7ff fff0 	bl	8000750 <__sfp_lock_acquire>
 8000770:	6a23      	ldr	r3, [r4, #32]
 8000772:	b11b      	cbz	r3, 800077c <__sinit+0x14>
 8000774:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000778:	f7ff bff0 	b.w	800075c <__sfp_lock_release>
 800077c:	4b04      	ldr	r3, [pc, #16]	@ (8000790 <__sinit+0x28>)
 800077e:	6223      	str	r3, [r4, #32]
 8000780:	4b04      	ldr	r3, [pc, #16]	@ (8000794 <__sinit+0x2c>)
 8000782:	681b      	ldr	r3, [r3, #0]
 8000784:	2b00      	cmp	r3, #0
 8000786:	d1f5      	bne.n	8000774 <__sinit+0xc>
 8000788:	f7ff ffc4 	bl	8000714 <global_stdio_init.part.0>
 800078c:	e7f2      	b.n	8000774 <__sinit+0xc>
 800078e:	bf00      	nop
 8000790:	080006d5 	.word	0x080006d5
 8000794:	200001b4 	.word	0x200001b4

08000798 <_fwalk_sglue>:
 8000798:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800079c:	4607      	mov	r7, r0
 800079e:	4688      	mov	r8, r1
 80007a0:	4614      	mov	r4, r2
 80007a2:	2600      	movs	r6, #0
 80007a4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80007a8:	f1b9 0901 	subs.w	r9, r9, #1
 80007ac:	d505      	bpl.n	80007ba <_fwalk_sglue+0x22>
 80007ae:	6824      	ldr	r4, [r4, #0]
 80007b0:	2c00      	cmp	r4, #0
 80007b2:	d1f7      	bne.n	80007a4 <_fwalk_sglue+0xc>
 80007b4:	4630      	mov	r0, r6
 80007b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007ba:	89ab      	ldrh	r3, [r5, #12]
 80007bc:	2b01      	cmp	r3, #1
 80007be:	d907      	bls.n	80007d0 <_fwalk_sglue+0x38>
 80007c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007c4:	3301      	adds	r3, #1
 80007c6:	d003      	beq.n	80007d0 <_fwalk_sglue+0x38>
 80007c8:	4629      	mov	r1, r5
 80007ca:	4638      	mov	r0, r7
 80007cc:	47c0      	blx	r8
 80007ce:	4306      	orrs	r6, r0
 80007d0:	3568      	adds	r5, #104	@ 0x68
 80007d2:	e7e9      	b.n	80007a8 <_fwalk_sglue+0x10>

080007d4 <iprintf>:
 80007d4:	b40f      	push	{r0, r1, r2, r3}
 80007d6:	b507      	push	{r0, r1, r2, lr}
 80007d8:	4906      	ldr	r1, [pc, #24]	@ (80007f4 <iprintf+0x20>)
 80007da:	ab04      	add	r3, sp, #16
 80007dc:	6808      	ldr	r0, [r1, #0]
 80007de:	f853 2b04 	ldr.w	r2, [r3], #4
 80007e2:	6881      	ldr	r1, [r0, #8]
 80007e4:	9301      	str	r3, [sp, #4]
 80007e6:	f000 f9e9 	bl	8000bbc <_vfiprintf_r>
 80007ea:	b003      	add	sp, #12
 80007ec:	f85d eb04 	ldr.w	lr, [sp], #4
 80007f0:	b004      	add	sp, #16
 80007f2:	4770      	bx	lr
 80007f4:	2000000c 	.word	0x2000000c

080007f8 <__sread>:
 80007f8:	b510      	push	{r4, lr}
 80007fa:	460c      	mov	r4, r1
 80007fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000800:	f000 f868 	bl	80008d4 <_read_r>
 8000804:	2800      	cmp	r0, #0
 8000806:	bfab      	itete	ge
 8000808:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800080a:	89a3      	ldrhlt	r3, [r4, #12]
 800080c:	181b      	addge	r3, r3, r0
 800080e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000812:	bfac      	ite	ge
 8000814:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000816:	81a3      	strhlt	r3, [r4, #12]
 8000818:	bd10      	pop	{r4, pc}

0800081a <__swrite>:
 800081a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800081e:	461f      	mov	r7, r3
 8000820:	898b      	ldrh	r3, [r1, #12]
 8000822:	05db      	lsls	r3, r3, #23
 8000824:	4605      	mov	r5, r0
 8000826:	460c      	mov	r4, r1
 8000828:	4616      	mov	r6, r2
 800082a:	d505      	bpl.n	8000838 <__swrite+0x1e>
 800082c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000830:	2302      	movs	r3, #2
 8000832:	2200      	movs	r2, #0
 8000834:	f000 f83c 	bl	80008b0 <_lseek_r>
 8000838:	89a3      	ldrh	r3, [r4, #12]
 800083a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800083e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000842:	81a3      	strh	r3, [r4, #12]
 8000844:	4632      	mov	r2, r6
 8000846:	463b      	mov	r3, r7
 8000848:	4628      	mov	r0, r5
 800084a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800084e:	f000 b853 	b.w	80008f8 <_write_r>

08000852 <__sseek>:
 8000852:	b510      	push	{r4, lr}
 8000854:	460c      	mov	r4, r1
 8000856:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800085a:	f000 f829 	bl	80008b0 <_lseek_r>
 800085e:	1c43      	adds	r3, r0, #1
 8000860:	89a3      	ldrh	r3, [r4, #12]
 8000862:	bf15      	itete	ne
 8000864:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000866:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800086a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800086e:	81a3      	strheq	r3, [r4, #12]
 8000870:	bf18      	it	ne
 8000872:	81a3      	strhne	r3, [r4, #12]
 8000874:	bd10      	pop	{r4, pc}

08000876 <__sclose>:
 8000876:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800087a:	f000 b809 	b.w	8000890 <_close_r>

0800087e <memset>:
 800087e:	4402      	add	r2, r0
 8000880:	4603      	mov	r3, r0
 8000882:	4293      	cmp	r3, r2
 8000884:	d100      	bne.n	8000888 <memset+0xa>
 8000886:	4770      	bx	lr
 8000888:	f803 1b01 	strb.w	r1, [r3], #1
 800088c:	e7f9      	b.n	8000882 <memset+0x4>
	...

08000890 <_close_r>:
 8000890:	b538      	push	{r3, r4, r5, lr}
 8000892:	4d06      	ldr	r5, [pc, #24]	@ (80008ac <_close_r+0x1c>)
 8000894:	2300      	movs	r3, #0
 8000896:	4604      	mov	r4, r0
 8000898:	4608      	mov	r0, r1
 800089a:	602b      	str	r3, [r5, #0]
 800089c:	f7ff fd63 	bl	8000366 <_close>
 80008a0:	1c43      	adds	r3, r0, #1
 80008a2:	d102      	bne.n	80008aa <_close_r+0x1a>
 80008a4:	682b      	ldr	r3, [r5, #0]
 80008a6:	b103      	cbz	r3, 80008aa <_close_r+0x1a>
 80008a8:	6023      	str	r3, [r4, #0]
 80008aa:	bd38      	pop	{r3, r4, r5, pc}
 80008ac:	200001b8 	.word	0x200001b8

080008b0 <_lseek_r>:
 80008b0:	b538      	push	{r3, r4, r5, lr}
 80008b2:	4d07      	ldr	r5, [pc, #28]	@ (80008d0 <_lseek_r+0x20>)
 80008b4:	4604      	mov	r4, r0
 80008b6:	4608      	mov	r0, r1
 80008b8:	4611      	mov	r1, r2
 80008ba:	2200      	movs	r2, #0
 80008bc:	602a      	str	r2, [r5, #0]
 80008be:	461a      	mov	r2, r3
 80008c0:	f7ff fd78 	bl	80003b4 <_lseek>
 80008c4:	1c43      	adds	r3, r0, #1
 80008c6:	d102      	bne.n	80008ce <_lseek_r+0x1e>
 80008c8:	682b      	ldr	r3, [r5, #0]
 80008ca:	b103      	cbz	r3, 80008ce <_lseek_r+0x1e>
 80008cc:	6023      	str	r3, [r4, #0]
 80008ce:	bd38      	pop	{r3, r4, r5, pc}
 80008d0:	200001b8 	.word	0x200001b8

080008d4 <_read_r>:
 80008d4:	b538      	push	{r3, r4, r5, lr}
 80008d6:	4d07      	ldr	r5, [pc, #28]	@ (80008f4 <_read_r+0x20>)
 80008d8:	4604      	mov	r4, r0
 80008da:	4608      	mov	r0, r1
 80008dc:	4611      	mov	r1, r2
 80008de:	2200      	movs	r2, #0
 80008e0:	602a      	str	r2, [r5, #0]
 80008e2:	461a      	mov	r2, r3
 80008e4:	f7ff fd22 	bl	800032c <_read>
 80008e8:	1c43      	adds	r3, r0, #1
 80008ea:	d102      	bne.n	80008f2 <_read_r+0x1e>
 80008ec:	682b      	ldr	r3, [r5, #0]
 80008ee:	b103      	cbz	r3, 80008f2 <_read_r+0x1e>
 80008f0:	6023      	str	r3, [r4, #0]
 80008f2:	bd38      	pop	{r3, r4, r5, pc}
 80008f4:	200001b8 	.word	0x200001b8

080008f8 <_write_r>:
 80008f8:	b538      	push	{r3, r4, r5, lr}
 80008fa:	4d07      	ldr	r5, [pc, #28]	@ (8000918 <_write_r+0x20>)
 80008fc:	4604      	mov	r4, r0
 80008fe:	4608      	mov	r0, r1
 8000900:	4611      	mov	r1, r2
 8000902:	2200      	movs	r2, #0
 8000904:	602a      	str	r2, [r5, #0]
 8000906:	461a      	mov	r2, r3
 8000908:	f7ff fe5c 	bl	80005c4 <_write>
 800090c:	1c43      	adds	r3, r0, #1
 800090e:	d102      	bne.n	8000916 <_write_r+0x1e>
 8000910:	682b      	ldr	r3, [r5, #0]
 8000912:	b103      	cbz	r3, 8000916 <_write_r+0x1e>
 8000914:	6023      	str	r3, [r4, #0]
 8000916:	bd38      	pop	{r3, r4, r5, pc}
 8000918:	200001b8 	.word	0x200001b8

0800091c <__errno>:
 800091c:	4b01      	ldr	r3, [pc, #4]	@ (8000924 <__errno+0x8>)
 800091e:	6818      	ldr	r0, [r3, #0]
 8000920:	4770      	bx	lr
 8000922:	bf00      	nop
 8000924:	2000000c 	.word	0x2000000c

08000928 <__libc_init_array>:
 8000928:	b570      	push	{r4, r5, r6, lr}
 800092a:	4d0d      	ldr	r5, [pc, #52]	@ (8000960 <__libc_init_array+0x38>)
 800092c:	4c0d      	ldr	r4, [pc, #52]	@ (8000964 <__libc_init_array+0x3c>)
 800092e:	1b64      	subs	r4, r4, r5
 8000930:	10a4      	asrs	r4, r4, #2
 8000932:	2600      	movs	r6, #0
 8000934:	42a6      	cmp	r6, r4
 8000936:	d109      	bne.n	800094c <__libc_init_array+0x24>
 8000938:	4d0b      	ldr	r5, [pc, #44]	@ (8000968 <__libc_init_array+0x40>)
 800093a:	4c0c      	ldr	r4, [pc, #48]	@ (800096c <__libc_init_array+0x44>)
 800093c:	f000 fdb8 	bl	80014b0 <_init>
 8000940:	1b64      	subs	r4, r4, r5
 8000942:	10a4      	asrs	r4, r4, #2
 8000944:	2600      	movs	r6, #0
 8000946:	42a6      	cmp	r6, r4
 8000948:	d105      	bne.n	8000956 <__libc_init_array+0x2e>
 800094a:	bd70      	pop	{r4, r5, r6, pc}
 800094c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000950:	4798      	blx	r3
 8000952:	3601      	adds	r6, #1
 8000954:	e7ee      	b.n	8000934 <__libc_init_array+0xc>
 8000956:	f855 3b04 	ldr.w	r3, [r5], #4
 800095a:	4798      	blx	r3
 800095c:	3601      	adds	r6, #1
 800095e:	e7f2      	b.n	8000946 <__libc_init_array+0x1e>
 8000960:	08001ba0 	.word	0x08001ba0
 8000964:	08001ba0 	.word	0x08001ba0
 8000968:	08001ba0 	.word	0x08001ba0
 800096c:	08001ba4 	.word	0x08001ba4

08000970 <__retarget_lock_init_recursive>:
 8000970:	4770      	bx	lr

08000972 <__retarget_lock_acquire_recursive>:
 8000972:	4770      	bx	lr

08000974 <__retarget_lock_release_recursive>:
 8000974:	4770      	bx	lr
	...

08000978 <_free_r>:
 8000978:	b538      	push	{r3, r4, r5, lr}
 800097a:	4605      	mov	r5, r0
 800097c:	2900      	cmp	r1, #0
 800097e:	d041      	beq.n	8000a04 <_free_r+0x8c>
 8000980:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000984:	1f0c      	subs	r4, r1, #4
 8000986:	2b00      	cmp	r3, #0
 8000988:	bfb8      	it	lt
 800098a:	18e4      	addlt	r4, r4, r3
 800098c:	f000 f8e0 	bl	8000b50 <__malloc_lock>
 8000990:	4a1d      	ldr	r2, [pc, #116]	@ (8000a08 <_free_r+0x90>)
 8000992:	6813      	ldr	r3, [r2, #0]
 8000994:	b933      	cbnz	r3, 80009a4 <_free_r+0x2c>
 8000996:	6063      	str	r3, [r4, #4]
 8000998:	6014      	str	r4, [r2, #0]
 800099a:	4628      	mov	r0, r5
 800099c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009a0:	f000 b8dc 	b.w	8000b5c <__malloc_unlock>
 80009a4:	42a3      	cmp	r3, r4
 80009a6:	d908      	bls.n	80009ba <_free_r+0x42>
 80009a8:	6820      	ldr	r0, [r4, #0]
 80009aa:	1821      	adds	r1, r4, r0
 80009ac:	428b      	cmp	r3, r1
 80009ae:	bf01      	itttt	eq
 80009b0:	6819      	ldreq	r1, [r3, #0]
 80009b2:	685b      	ldreq	r3, [r3, #4]
 80009b4:	1809      	addeq	r1, r1, r0
 80009b6:	6021      	streq	r1, [r4, #0]
 80009b8:	e7ed      	b.n	8000996 <_free_r+0x1e>
 80009ba:	461a      	mov	r2, r3
 80009bc:	685b      	ldr	r3, [r3, #4]
 80009be:	b10b      	cbz	r3, 80009c4 <_free_r+0x4c>
 80009c0:	42a3      	cmp	r3, r4
 80009c2:	d9fa      	bls.n	80009ba <_free_r+0x42>
 80009c4:	6811      	ldr	r1, [r2, #0]
 80009c6:	1850      	adds	r0, r2, r1
 80009c8:	42a0      	cmp	r0, r4
 80009ca:	d10b      	bne.n	80009e4 <_free_r+0x6c>
 80009cc:	6820      	ldr	r0, [r4, #0]
 80009ce:	4401      	add	r1, r0
 80009d0:	1850      	adds	r0, r2, r1
 80009d2:	4283      	cmp	r3, r0
 80009d4:	6011      	str	r1, [r2, #0]
 80009d6:	d1e0      	bne.n	800099a <_free_r+0x22>
 80009d8:	6818      	ldr	r0, [r3, #0]
 80009da:	685b      	ldr	r3, [r3, #4]
 80009dc:	6053      	str	r3, [r2, #4]
 80009de:	4408      	add	r0, r1
 80009e0:	6010      	str	r0, [r2, #0]
 80009e2:	e7da      	b.n	800099a <_free_r+0x22>
 80009e4:	d902      	bls.n	80009ec <_free_r+0x74>
 80009e6:	230c      	movs	r3, #12
 80009e8:	602b      	str	r3, [r5, #0]
 80009ea:	e7d6      	b.n	800099a <_free_r+0x22>
 80009ec:	6820      	ldr	r0, [r4, #0]
 80009ee:	1821      	adds	r1, r4, r0
 80009f0:	428b      	cmp	r3, r1
 80009f2:	bf04      	itt	eq
 80009f4:	6819      	ldreq	r1, [r3, #0]
 80009f6:	685b      	ldreq	r3, [r3, #4]
 80009f8:	6063      	str	r3, [r4, #4]
 80009fa:	bf04      	itt	eq
 80009fc:	1809      	addeq	r1, r1, r0
 80009fe:	6021      	streq	r1, [r4, #0]
 8000a00:	6054      	str	r4, [r2, #4]
 8000a02:	e7ca      	b.n	800099a <_free_r+0x22>
 8000a04:	bd38      	pop	{r3, r4, r5, pc}
 8000a06:	bf00      	nop
 8000a08:	200001c4 	.word	0x200001c4

08000a0c <sbrk_aligned>:
 8000a0c:	b570      	push	{r4, r5, r6, lr}
 8000a0e:	4e0f      	ldr	r6, [pc, #60]	@ (8000a4c <sbrk_aligned+0x40>)
 8000a10:	460c      	mov	r4, r1
 8000a12:	6831      	ldr	r1, [r6, #0]
 8000a14:	4605      	mov	r5, r0
 8000a16:	b911      	cbnz	r1, 8000a1e <sbrk_aligned+0x12>
 8000a18:	f000 fcb6 	bl	8001388 <_sbrk_r>
 8000a1c:	6030      	str	r0, [r6, #0]
 8000a1e:	4621      	mov	r1, r4
 8000a20:	4628      	mov	r0, r5
 8000a22:	f000 fcb1 	bl	8001388 <_sbrk_r>
 8000a26:	1c43      	adds	r3, r0, #1
 8000a28:	d103      	bne.n	8000a32 <sbrk_aligned+0x26>
 8000a2a:	f04f 34ff 	mov.w	r4, #4294967295
 8000a2e:	4620      	mov	r0, r4
 8000a30:	bd70      	pop	{r4, r5, r6, pc}
 8000a32:	1cc4      	adds	r4, r0, #3
 8000a34:	f024 0403 	bic.w	r4, r4, #3
 8000a38:	42a0      	cmp	r0, r4
 8000a3a:	d0f8      	beq.n	8000a2e <sbrk_aligned+0x22>
 8000a3c:	1a21      	subs	r1, r4, r0
 8000a3e:	4628      	mov	r0, r5
 8000a40:	f000 fca2 	bl	8001388 <_sbrk_r>
 8000a44:	3001      	adds	r0, #1
 8000a46:	d1f2      	bne.n	8000a2e <sbrk_aligned+0x22>
 8000a48:	e7ef      	b.n	8000a2a <sbrk_aligned+0x1e>
 8000a4a:	bf00      	nop
 8000a4c:	200001c0 	.word	0x200001c0

08000a50 <_malloc_r>:
 8000a50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a54:	1ccd      	adds	r5, r1, #3
 8000a56:	f025 0503 	bic.w	r5, r5, #3
 8000a5a:	3508      	adds	r5, #8
 8000a5c:	2d0c      	cmp	r5, #12
 8000a5e:	bf38      	it	cc
 8000a60:	250c      	movcc	r5, #12
 8000a62:	2d00      	cmp	r5, #0
 8000a64:	4606      	mov	r6, r0
 8000a66:	db01      	blt.n	8000a6c <_malloc_r+0x1c>
 8000a68:	42a9      	cmp	r1, r5
 8000a6a:	d904      	bls.n	8000a76 <_malloc_r+0x26>
 8000a6c:	230c      	movs	r3, #12
 8000a6e:	6033      	str	r3, [r6, #0]
 8000a70:	2000      	movs	r0, #0
 8000a72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a76:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000b4c <_malloc_r+0xfc>
 8000a7a:	f000 f869 	bl	8000b50 <__malloc_lock>
 8000a7e:	f8d8 3000 	ldr.w	r3, [r8]
 8000a82:	461c      	mov	r4, r3
 8000a84:	bb44      	cbnz	r4, 8000ad8 <_malloc_r+0x88>
 8000a86:	4629      	mov	r1, r5
 8000a88:	4630      	mov	r0, r6
 8000a8a:	f7ff ffbf 	bl	8000a0c <sbrk_aligned>
 8000a8e:	1c43      	adds	r3, r0, #1
 8000a90:	4604      	mov	r4, r0
 8000a92:	d158      	bne.n	8000b46 <_malloc_r+0xf6>
 8000a94:	f8d8 4000 	ldr.w	r4, [r8]
 8000a98:	4627      	mov	r7, r4
 8000a9a:	2f00      	cmp	r7, #0
 8000a9c:	d143      	bne.n	8000b26 <_malloc_r+0xd6>
 8000a9e:	2c00      	cmp	r4, #0
 8000aa0:	d04b      	beq.n	8000b3a <_malloc_r+0xea>
 8000aa2:	6823      	ldr	r3, [r4, #0]
 8000aa4:	4639      	mov	r1, r7
 8000aa6:	4630      	mov	r0, r6
 8000aa8:	eb04 0903 	add.w	r9, r4, r3
 8000aac:	f000 fc6c 	bl	8001388 <_sbrk_r>
 8000ab0:	4581      	cmp	r9, r0
 8000ab2:	d142      	bne.n	8000b3a <_malloc_r+0xea>
 8000ab4:	6821      	ldr	r1, [r4, #0]
 8000ab6:	1a6d      	subs	r5, r5, r1
 8000ab8:	4629      	mov	r1, r5
 8000aba:	4630      	mov	r0, r6
 8000abc:	f7ff ffa6 	bl	8000a0c <sbrk_aligned>
 8000ac0:	3001      	adds	r0, #1
 8000ac2:	d03a      	beq.n	8000b3a <_malloc_r+0xea>
 8000ac4:	6823      	ldr	r3, [r4, #0]
 8000ac6:	442b      	add	r3, r5
 8000ac8:	6023      	str	r3, [r4, #0]
 8000aca:	f8d8 3000 	ldr.w	r3, [r8]
 8000ace:	685a      	ldr	r2, [r3, #4]
 8000ad0:	bb62      	cbnz	r2, 8000b2c <_malloc_r+0xdc>
 8000ad2:	f8c8 7000 	str.w	r7, [r8]
 8000ad6:	e00f      	b.n	8000af8 <_malloc_r+0xa8>
 8000ad8:	6822      	ldr	r2, [r4, #0]
 8000ada:	1b52      	subs	r2, r2, r5
 8000adc:	d420      	bmi.n	8000b20 <_malloc_r+0xd0>
 8000ade:	2a0b      	cmp	r2, #11
 8000ae0:	d917      	bls.n	8000b12 <_malloc_r+0xc2>
 8000ae2:	1961      	adds	r1, r4, r5
 8000ae4:	42a3      	cmp	r3, r4
 8000ae6:	6025      	str	r5, [r4, #0]
 8000ae8:	bf18      	it	ne
 8000aea:	6059      	strne	r1, [r3, #4]
 8000aec:	6863      	ldr	r3, [r4, #4]
 8000aee:	bf08      	it	eq
 8000af0:	f8c8 1000 	streq.w	r1, [r8]
 8000af4:	5162      	str	r2, [r4, r5]
 8000af6:	604b      	str	r3, [r1, #4]
 8000af8:	4630      	mov	r0, r6
 8000afa:	f000 f82f 	bl	8000b5c <__malloc_unlock>
 8000afe:	f104 000b 	add.w	r0, r4, #11
 8000b02:	1d23      	adds	r3, r4, #4
 8000b04:	f020 0007 	bic.w	r0, r0, #7
 8000b08:	1ac2      	subs	r2, r0, r3
 8000b0a:	bf1c      	itt	ne
 8000b0c:	1a1b      	subne	r3, r3, r0
 8000b0e:	50a3      	strne	r3, [r4, r2]
 8000b10:	e7af      	b.n	8000a72 <_malloc_r+0x22>
 8000b12:	6862      	ldr	r2, [r4, #4]
 8000b14:	42a3      	cmp	r3, r4
 8000b16:	bf0c      	ite	eq
 8000b18:	f8c8 2000 	streq.w	r2, [r8]
 8000b1c:	605a      	strne	r2, [r3, #4]
 8000b1e:	e7eb      	b.n	8000af8 <_malloc_r+0xa8>
 8000b20:	4623      	mov	r3, r4
 8000b22:	6864      	ldr	r4, [r4, #4]
 8000b24:	e7ae      	b.n	8000a84 <_malloc_r+0x34>
 8000b26:	463c      	mov	r4, r7
 8000b28:	687f      	ldr	r7, [r7, #4]
 8000b2a:	e7b6      	b.n	8000a9a <_malloc_r+0x4a>
 8000b2c:	461a      	mov	r2, r3
 8000b2e:	685b      	ldr	r3, [r3, #4]
 8000b30:	42a3      	cmp	r3, r4
 8000b32:	d1fb      	bne.n	8000b2c <_malloc_r+0xdc>
 8000b34:	2300      	movs	r3, #0
 8000b36:	6053      	str	r3, [r2, #4]
 8000b38:	e7de      	b.n	8000af8 <_malloc_r+0xa8>
 8000b3a:	230c      	movs	r3, #12
 8000b3c:	6033      	str	r3, [r6, #0]
 8000b3e:	4630      	mov	r0, r6
 8000b40:	f000 f80c 	bl	8000b5c <__malloc_unlock>
 8000b44:	e794      	b.n	8000a70 <_malloc_r+0x20>
 8000b46:	6005      	str	r5, [r0, #0]
 8000b48:	e7d6      	b.n	8000af8 <_malloc_r+0xa8>
 8000b4a:	bf00      	nop
 8000b4c:	200001c4 	.word	0x200001c4

08000b50 <__malloc_lock>:
 8000b50:	4801      	ldr	r0, [pc, #4]	@ (8000b58 <__malloc_lock+0x8>)
 8000b52:	f7ff bf0e 	b.w	8000972 <__retarget_lock_acquire_recursive>
 8000b56:	bf00      	nop
 8000b58:	200001bc 	.word	0x200001bc

08000b5c <__malloc_unlock>:
 8000b5c:	4801      	ldr	r0, [pc, #4]	@ (8000b64 <__malloc_unlock+0x8>)
 8000b5e:	f7ff bf09 	b.w	8000974 <__retarget_lock_release_recursive>
 8000b62:	bf00      	nop
 8000b64:	200001bc 	.word	0x200001bc

08000b68 <__sfputc_r>:
 8000b68:	6893      	ldr	r3, [r2, #8]
 8000b6a:	3b01      	subs	r3, #1
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	b410      	push	{r4}
 8000b70:	6093      	str	r3, [r2, #8]
 8000b72:	da08      	bge.n	8000b86 <__sfputc_r+0x1e>
 8000b74:	6994      	ldr	r4, [r2, #24]
 8000b76:	42a3      	cmp	r3, r4
 8000b78:	db01      	blt.n	8000b7e <__sfputc_r+0x16>
 8000b7a:	290a      	cmp	r1, #10
 8000b7c:	d103      	bne.n	8000b86 <__sfputc_r+0x1e>
 8000b7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b82:	f000 bb6d 	b.w	8001260 <__swbuf_r>
 8000b86:	6813      	ldr	r3, [r2, #0]
 8000b88:	1c58      	adds	r0, r3, #1
 8000b8a:	6010      	str	r0, [r2, #0]
 8000b8c:	7019      	strb	r1, [r3, #0]
 8000b8e:	4608      	mov	r0, r1
 8000b90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000b94:	4770      	bx	lr

08000b96 <__sfputs_r>:
 8000b96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b98:	4606      	mov	r6, r0
 8000b9a:	460f      	mov	r7, r1
 8000b9c:	4614      	mov	r4, r2
 8000b9e:	18d5      	adds	r5, r2, r3
 8000ba0:	42ac      	cmp	r4, r5
 8000ba2:	d101      	bne.n	8000ba8 <__sfputs_r+0x12>
 8000ba4:	2000      	movs	r0, #0
 8000ba6:	e007      	b.n	8000bb8 <__sfputs_r+0x22>
 8000ba8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bac:	463a      	mov	r2, r7
 8000bae:	4630      	mov	r0, r6
 8000bb0:	f7ff ffda 	bl	8000b68 <__sfputc_r>
 8000bb4:	1c43      	adds	r3, r0, #1
 8000bb6:	d1f3      	bne.n	8000ba0 <__sfputs_r+0xa>
 8000bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000bbc <_vfiprintf_r>:
 8000bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000bc0:	460d      	mov	r5, r1
 8000bc2:	b09d      	sub	sp, #116	@ 0x74
 8000bc4:	4614      	mov	r4, r2
 8000bc6:	4698      	mov	r8, r3
 8000bc8:	4606      	mov	r6, r0
 8000bca:	b118      	cbz	r0, 8000bd4 <_vfiprintf_r+0x18>
 8000bcc:	6a03      	ldr	r3, [r0, #32]
 8000bce:	b90b      	cbnz	r3, 8000bd4 <_vfiprintf_r+0x18>
 8000bd0:	f7ff fdca 	bl	8000768 <__sinit>
 8000bd4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000bd6:	07d9      	lsls	r1, r3, #31
 8000bd8:	d405      	bmi.n	8000be6 <_vfiprintf_r+0x2a>
 8000bda:	89ab      	ldrh	r3, [r5, #12]
 8000bdc:	059a      	lsls	r2, r3, #22
 8000bde:	d402      	bmi.n	8000be6 <_vfiprintf_r+0x2a>
 8000be0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000be2:	f7ff fec6 	bl	8000972 <__retarget_lock_acquire_recursive>
 8000be6:	89ab      	ldrh	r3, [r5, #12]
 8000be8:	071b      	lsls	r3, r3, #28
 8000bea:	d501      	bpl.n	8000bf0 <_vfiprintf_r+0x34>
 8000bec:	692b      	ldr	r3, [r5, #16]
 8000bee:	b99b      	cbnz	r3, 8000c18 <_vfiprintf_r+0x5c>
 8000bf0:	4629      	mov	r1, r5
 8000bf2:	4630      	mov	r0, r6
 8000bf4:	f000 fb72 	bl	80012dc <__swsetup_r>
 8000bf8:	b170      	cbz	r0, 8000c18 <_vfiprintf_r+0x5c>
 8000bfa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000bfc:	07dc      	lsls	r4, r3, #31
 8000bfe:	d504      	bpl.n	8000c0a <_vfiprintf_r+0x4e>
 8000c00:	f04f 30ff 	mov.w	r0, #4294967295
 8000c04:	b01d      	add	sp, #116	@ 0x74
 8000c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c0a:	89ab      	ldrh	r3, [r5, #12]
 8000c0c:	0598      	lsls	r0, r3, #22
 8000c0e:	d4f7      	bmi.n	8000c00 <_vfiprintf_r+0x44>
 8000c10:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c12:	f7ff feaf 	bl	8000974 <__retarget_lock_release_recursive>
 8000c16:	e7f3      	b.n	8000c00 <_vfiprintf_r+0x44>
 8000c18:	2300      	movs	r3, #0
 8000c1a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c1c:	2320      	movs	r3, #32
 8000c1e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000c22:	f8cd 800c 	str.w	r8, [sp, #12]
 8000c26:	2330      	movs	r3, #48	@ 0x30
 8000c28:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000dd8 <_vfiprintf_r+0x21c>
 8000c2c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000c30:	f04f 0901 	mov.w	r9, #1
 8000c34:	4623      	mov	r3, r4
 8000c36:	469a      	mov	sl, r3
 8000c38:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000c3c:	b10a      	cbz	r2, 8000c42 <_vfiprintf_r+0x86>
 8000c3e:	2a25      	cmp	r2, #37	@ 0x25
 8000c40:	d1f9      	bne.n	8000c36 <_vfiprintf_r+0x7a>
 8000c42:	ebba 0b04 	subs.w	fp, sl, r4
 8000c46:	d00b      	beq.n	8000c60 <_vfiprintf_r+0xa4>
 8000c48:	465b      	mov	r3, fp
 8000c4a:	4622      	mov	r2, r4
 8000c4c:	4629      	mov	r1, r5
 8000c4e:	4630      	mov	r0, r6
 8000c50:	f7ff ffa1 	bl	8000b96 <__sfputs_r>
 8000c54:	3001      	adds	r0, #1
 8000c56:	f000 80a7 	beq.w	8000da8 <_vfiprintf_r+0x1ec>
 8000c5a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000c5c:	445a      	add	r2, fp
 8000c5e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000c60:	f89a 3000 	ldrb.w	r3, [sl]
 8000c64:	2b00      	cmp	r3, #0
 8000c66:	f000 809f 	beq.w	8000da8 <_vfiprintf_r+0x1ec>
 8000c6a:	2300      	movs	r3, #0
 8000c6c:	f04f 32ff 	mov.w	r2, #4294967295
 8000c70:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000c74:	f10a 0a01 	add.w	sl, sl, #1
 8000c78:	9304      	str	r3, [sp, #16]
 8000c7a:	9307      	str	r3, [sp, #28]
 8000c7c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000c80:	931a      	str	r3, [sp, #104]	@ 0x68
 8000c82:	4654      	mov	r4, sl
 8000c84:	2205      	movs	r2, #5
 8000c86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c8a:	4853      	ldr	r0, [pc, #332]	@ (8000dd8 <_vfiprintf_r+0x21c>)
 8000c8c:	f7ff faa8 	bl	80001e0 <memchr>
 8000c90:	9a04      	ldr	r2, [sp, #16]
 8000c92:	b9d8      	cbnz	r0, 8000ccc <_vfiprintf_r+0x110>
 8000c94:	06d1      	lsls	r1, r2, #27
 8000c96:	bf44      	itt	mi
 8000c98:	2320      	movmi	r3, #32
 8000c9a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000c9e:	0713      	lsls	r3, r2, #28
 8000ca0:	bf44      	itt	mi
 8000ca2:	232b      	movmi	r3, #43	@ 0x2b
 8000ca4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ca8:	f89a 3000 	ldrb.w	r3, [sl]
 8000cac:	2b2a      	cmp	r3, #42	@ 0x2a
 8000cae:	d015      	beq.n	8000cdc <_vfiprintf_r+0x120>
 8000cb0:	9a07      	ldr	r2, [sp, #28]
 8000cb2:	4654      	mov	r4, sl
 8000cb4:	2000      	movs	r0, #0
 8000cb6:	f04f 0c0a 	mov.w	ip, #10
 8000cba:	4621      	mov	r1, r4
 8000cbc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000cc0:	3b30      	subs	r3, #48	@ 0x30
 8000cc2:	2b09      	cmp	r3, #9
 8000cc4:	d94b      	bls.n	8000d5e <_vfiprintf_r+0x1a2>
 8000cc6:	b1b0      	cbz	r0, 8000cf6 <_vfiprintf_r+0x13a>
 8000cc8:	9207      	str	r2, [sp, #28]
 8000cca:	e014      	b.n	8000cf6 <_vfiprintf_r+0x13a>
 8000ccc:	eba0 0308 	sub.w	r3, r0, r8
 8000cd0:	fa09 f303 	lsl.w	r3, r9, r3
 8000cd4:	4313      	orrs	r3, r2
 8000cd6:	9304      	str	r3, [sp, #16]
 8000cd8:	46a2      	mov	sl, r4
 8000cda:	e7d2      	b.n	8000c82 <_vfiprintf_r+0xc6>
 8000cdc:	9b03      	ldr	r3, [sp, #12]
 8000cde:	1d19      	adds	r1, r3, #4
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	9103      	str	r1, [sp, #12]
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	bfbb      	ittet	lt
 8000ce8:	425b      	neglt	r3, r3
 8000cea:	f042 0202 	orrlt.w	r2, r2, #2
 8000cee:	9307      	strge	r3, [sp, #28]
 8000cf0:	9307      	strlt	r3, [sp, #28]
 8000cf2:	bfb8      	it	lt
 8000cf4:	9204      	strlt	r2, [sp, #16]
 8000cf6:	7823      	ldrb	r3, [r4, #0]
 8000cf8:	2b2e      	cmp	r3, #46	@ 0x2e
 8000cfa:	d10a      	bne.n	8000d12 <_vfiprintf_r+0x156>
 8000cfc:	7863      	ldrb	r3, [r4, #1]
 8000cfe:	2b2a      	cmp	r3, #42	@ 0x2a
 8000d00:	d132      	bne.n	8000d68 <_vfiprintf_r+0x1ac>
 8000d02:	9b03      	ldr	r3, [sp, #12]
 8000d04:	1d1a      	adds	r2, r3, #4
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	9203      	str	r2, [sp, #12]
 8000d0a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000d0e:	3402      	adds	r4, #2
 8000d10:	9305      	str	r3, [sp, #20]
 8000d12:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000de8 <_vfiprintf_r+0x22c>
 8000d16:	7821      	ldrb	r1, [r4, #0]
 8000d18:	2203      	movs	r2, #3
 8000d1a:	4650      	mov	r0, sl
 8000d1c:	f7ff fa60 	bl	80001e0 <memchr>
 8000d20:	b138      	cbz	r0, 8000d32 <_vfiprintf_r+0x176>
 8000d22:	9b04      	ldr	r3, [sp, #16]
 8000d24:	eba0 000a 	sub.w	r0, r0, sl
 8000d28:	2240      	movs	r2, #64	@ 0x40
 8000d2a:	4082      	lsls	r2, r0
 8000d2c:	4313      	orrs	r3, r2
 8000d2e:	3401      	adds	r4, #1
 8000d30:	9304      	str	r3, [sp, #16]
 8000d32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d36:	4829      	ldr	r0, [pc, #164]	@ (8000ddc <_vfiprintf_r+0x220>)
 8000d38:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000d3c:	2206      	movs	r2, #6
 8000d3e:	f7ff fa4f 	bl	80001e0 <memchr>
 8000d42:	2800      	cmp	r0, #0
 8000d44:	d03f      	beq.n	8000dc6 <_vfiprintf_r+0x20a>
 8000d46:	4b26      	ldr	r3, [pc, #152]	@ (8000de0 <_vfiprintf_r+0x224>)
 8000d48:	bb1b      	cbnz	r3, 8000d92 <_vfiprintf_r+0x1d6>
 8000d4a:	9b03      	ldr	r3, [sp, #12]
 8000d4c:	3307      	adds	r3, #7
 8000d4e:	f023 0307 	bic.w	r3, r3, #7
 8000d52:	3308      	adds	r3, #8
 8000d54:	9303      	str	r3, [sp, #12]
 8000d56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000d58:	443b      	add	r3, r7
 8000d5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000d5c:	e76a      	b.n	8000c34 <_vfiprintf_r+0x78>
 8000d5e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000d62:	460c      	mov	r4, r1
 8000d64:	2001      	movs	r0, #1
 8000d66:	e7a8      	b.n	8000cba <_vfiprintf_r+0xfe>
 8000d68:	2300      	movs	r3, #0
 8000d6a:	3401      	adds	r4, #1
 8000d6c:	9305      	str	r3, [sp, #20]
 8000d6e:	4619      	mov	r1, r3
 8000d70:	f04f 0c0a 	mov.w	ip, #10
 8000d74:	4620      	mov	r0, r4
 8000d76:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000d7a:	3a30      	subs	r2, #48	@ 0x30
 8000d7c:	2a09      	cmp	r2, #9
 8000d7e:	d903      	bls.n	8000d88 <_vfiprintf_r+0x1cc>
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d0c6      	beq.n	8000d12 <_vfiprintf_r+0x156>
 8000d84:	9105      	str	r1, [sp, #20]
 8000d86:	e7c4      	b.n	8000d12 <_vfiprintf_r+0x156>
 8000d88:	fb0c 2101 	mla	r1, ip, r1, r2
 8000d8c:	4604      	mov	r4, r0
 8000d8e:	2301      	movs	r3, #1
 8000d90:	e7f0      	b.n	8000d74 <_vfiprintf_r+0x1b8>
 8000d92:	ab03      	add	r3, sp, #12
 8000d94:	9300      	str	r3, [sp, #0]
 8000d96:	462a      	mov	r2, r5
 8000d98:	4b12      	ldr	r3, [pc, #72]	@ (8000de4 <_vfiprintf_r+0x228>)
 8000d9a:	a904      	add	r1, sp, #16
 8000d9c:	4630      	mov	r0, r6
 8000d9e:	f3af 8000 	nop.w
 8000da2:	4607      	mov	r7, r0
 8000da4:	1c78      	adds	r0, r7, #1
 8000da6:	d1d6      	bne.n	8000d56 <_vfiprintf_r+0x19a>
 8000da8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000daa:	07d9      	lsls	r1, r3, #31
 8000dac:	d405      	bmi.n	8000dba <_vfiprintf_r+0x1fe>
 8000dae:	89ab      	ldrh	r3, [r5, #12]
 8000db0:	059a      	lsls	r2, r3, #22
 8000db2:	d402      	bmi.n	8000dba <_vfiprintf_r+0x1fe>
 8000db4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000db6:	f7ff fddd 	bl	8000974 <__retarget_lock_release_recursive>
 8000dba:	89ab      	ldrh	r3, [r5, #12]
 8000dbc:	065b      	lsls	r3, r3, #25
 8000dbe:	f53f af1f 	bmi.w	8000c00 <_vfiprintf_r+0x44>
 8000dc2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000dc4:	e71e      	b.n	8000c04 <_vfiprintf_r+0x48>
 8000dc6:	ab03      	add	r3, sp, #12
 8000dc8:	9300      	str	r3, [sp, #0]
 8000dca:	462a      	mov	r2, r5
 8000dcc:	4b05      	ldr	r3, [pc, #20]	@ (8000de4 <_vfiprintf_r+0x228>)
 8000dce:	a904      	add	r1, sp, #16
 8000dd0:	4630      	mov	r0, r6
 8000dd2:	f000 f879 	bl	8000ec8 <_printf_i>
 8000dd6:	e7e4      	b.n	8000da2 <_vfiprintf_r+0x1e6>
 8000dd8:	08001b65 	.word	0x08001b65
 8000ddc:	08001b6f 	.word	0x08001b6f
 8000de0:	00000000 	.word	0x00000000
 8000de4:	08000b97 	.word	0x08000b97
 8000de8:	08001b6b 	.word	0x08001b6b

08000dec <_printf_common>:
 8000dec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000df0:	4616      	mov	r6, r2
 8000df2:	4698      	mov	r8, r3
 8000df4:	688a      	ldr	r2, [r1, #8]
 8000df6:	690b      	ldr	r3, [r1, #16]
 8000df8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000dfc:	4293      	cmp	r3, r2
 8000dfe:	bfb8      	it	lt
 8000e00:	4613      	movlt	r3, r2
 8000e02:	6033      	str	r3, [r6, #0]
 8000e04:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000e08:	4607      	mov	r7, r0
 8000e0a:	460c      	mov	r4, r1
 8000e0c:	b10a      	cbz	r2, 8000e12 <_printf_common+0x26>
 8000e0e:	3301      	adds	r3, #1
 8000e10:	6033      	str	r3, [r6, #0]
 8000e12:	6823      	ldr	r3, [r4, #0]
 8000e14:	0699      	lsls	r1, r3, #26
 8000e16:	bf42      	ittt	mi
 8000e18:	6833      	ldrmi	r3, [r6, #0]
 8000e1a:	3302      	addmi	r3, #2
 8000e1c:	6033      	strmi	r3, [r6, #0]
 8000e1e:	6825      	ldr	r5, [r4, #0]
 8000e20:	f015 0506 	ands.w	r5, r5, #6
 8000e24:	d106      	bne.n	8000e34 <_printf_common+0x48>
 8000e26:	f104 0a19 	add.w	sl, r4, #25
 8000e2a:	68e3      	ldr	r3, [r4, #12]
 8000e2c:	6832      	ldr	r2, [r6, #0]
 8000e2e:	1a9b      	subs	r3, r3, r2
 8000e30:	42ab      	cmp	r3, r5
 8000e32:	dc26      	bgt.n	8000e82 <_printf_common+0x96>
 8000e34:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000e38:	6822      	ldr	r2, [r4, #0]
 8000e3a:	3b00      	subs	r3, #0
 8000e3c:	bf18      	it	ne
 8000e3e:	2301      	movne	r3, #1
 8000e40:	0692      	lsls	r2, r2, #26
 8000e42:	d42b      	bmi.n	8000e9c <_printf_common+0xb0>
 8000e44:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000e48:	4641      	mov	r1, r8
 8000e4a:	4638      	mov	r0, r7
 8000e4c:	47c8      	blx	r9
 8000e4e:	3001      	adds	r0, #1
 8000e50:	d01e      	beq.n	8000e90 <_printf_common+0xa4>
 8000e52:	6823      	ldr	r3, [r4, #0]
 8000e54:	6922      	ldr	r2, [r4, #16]
 8000e56:	f003 0306 	and.w	r3, r3, #6
 8000e5a:	2b04      	cmp	r3, #4
 8000e5c:	bf02      	ittt	eq
 8000e5e:	68e5      	ldreq	r5, [r4, #12]
 8000e60:	6833      	ldreq	r3, [r6, #0]
 8000e62:	1aed      	subeq	r5, r5, r3
 8000e64:	68a3      	ldr	r3, [r4, #8]
 8000e66:	bf0c      	ite	eq
 8000e68:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000e6c:	2500      	movne	r5, #0
 8000e6e:	4293      	cmp	r3, r2
 8000e70:	bfc4      	itt	gt
 8000e72:	1a9b      	subgt	r3, r3, r2
 8000e74:	18ed      	addgt	r5, r5, r3
 8000e76:	2600      	movs	r6, #0
 8000e78:	341a      	adds	r4, #26
 8000e7a:	42b5      	cmp	r5, r6
 8000e7c:	d11a      	bne.n	8000eb4 <_printf_common+0xc8>
 8000e7e:	2000      	movs	r0, #0
 8000e80:	e008      	b.n	8000e94 <_printf_common+0xa8>
 8000e82:	2301      	movs	r3, #1
 8000e84:	4652      	mov	r2, sl
 8000e86:	4641      	mov	r1, r8
 8000e88:	4638      	mov	r0, r7
 8000e8a:	47c8      	blx	r9
 8000e8c:	3001      	adds	r0, #1
 8000e8e:	d103      	bne.n	8000e98 <_printf_common+0xac>
 8000e90:	f04f 30ff 	mov.w	r0, #4294967295
 8000e94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e98:	3501      	adds	r5, #1
 8000e9a:	e7c6      	b.n	8000e2a <_printf_common+0x3e>
 8000e9c:	18e1      	adds	r1, r4, r3
 8000e9e:	1c5a      	adds	r2, r3, #1
 8000ea0:	2030      	movs	r0, #48	@ 0x30
 8000ea2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000ea6:	4422      	add	r2, r4
 8000ea8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000eac:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000eb0:	3302      	adds	r3, #2
 8000eb2:	e7c7      	b.n	8000e44 <_printf_common+0x58>
 8000eb4:	2301      	movs	r3, #1
 8000eb6:	4622      	mov	r2, r4
 8000eb8:	4641      	mov	r1, r8
 8000eba:	4638      	mov	r0, r7
 8000ebc:	47c8      	blx	r9
 8000ebe:	3001      	adds	r0, #1
 8000ec0:	d0e6      	beq.n	8000e90 <_printf_common+0xa4>
 8000ec2:	3601      	adds	r6, #1
 8000ec4:	e7d9      	b.n	8000e7a <_printf_common+0x8e>
	...

08000ec8 <_printf_i>:
 8000ec8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ecc:	7e0f      	ldrb	r7, [r1, #24]
 8000ece:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000ed0:	2f78      	cmp	r7, #120	@ 0x78
 8000ed2:	4691      	mov	r9, r2
 8000ed4:	4680      	mov	r8, r0
 8000ed6:	460c      	mov	r4, r1
 8000ed8:	469a      	mov	sl, r3
 8000eda:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000ede:	d807      	bhi.n	8000ef0 <_printf_i+0x28>
 8000ee0:	2f62      	cmp	r7, #98	@ 0x62
 8000ee2:	d80a      	bhi.n	8000efa <_printf_i+0x32>
 8000ee4:	2f00      	cmp	r7, #0
 8000ee6:	f000 80d2 	beq.w	800108e <_printf_i+0x1c6>
 8000eea:	2f58      	cmp	r7, #88	@ 0x58
 8000eec:	f000 80b9 	beq.w	8001062 <_printf_i+0x19a>
 8000ef0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ef4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000ef8:	e03a      	b.n	8000f70 <_printf_i+0xa8>
 8000efa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000efe:	2b15      	cmp	r3, #21
 8000f00:	d8f6      	bhi.n	8000ef0 <_printf_i+0x28>
 8000f02:	a101      	add	r1, pc, #4	@ (adr r1, 8000f08 <_printf_i+0x40>)
 8000f04:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000f08:	08000f61 	.word	0x08000f61
 8000f0c:	08000f75 	.word	0x08000f75
 8000f10:	08000ef1 	.word	0x08000ef1
 8000f14:	08000ef1 	.word	0x08000ef1
 8000f18:	08000ef1 	.word	0x08000ef1
 8000f1c:	08000ef1 	.word	0x08000ef1
 8000f20:	08000f75 	.word	0x08000f75
 8000f24:	08000ef1 	.word	0x08000ef1
 8000f28:	08000ef1 	.word	0x08000ef1
 8000f2c:	08000ef1 	.word	0x08000ef1
 8000f30:	08000ef1 	.word	0x08000ef1
 8000f34:	08001075 	.word	0x08001075
 8000f38:	08000f9f 	.word	0x08000f9f
 8000f3c:	0800102f 	.word	0x0800102f
 8000f40:	08000ef1 	.word	0x08000ef1
 8000f44:	08000ef1 	.word	0x08000ef1
 8000f48:	08001097 	.word	0x08001097
 8000f4c:	08000ef1 	.word	0x08000ef1
 8000f50:	08000f9f 	.word	0x08000f9f
 8000f54:	08000ef1 	.word	0x08000ef1
 8000f58:	08000ef1 	.word	0x08000ef1
 8000f5c:	08001037 	.word	0x08001037
 8000f60:	6833      	ldr	r3, [r6, #0]
 8000f62:	1d1a      	adds	r2, r3, #4
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	6032      	str	r2, [r6, #0]
 8000f68:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000f6c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000f70:	2301      	movs	r3, #1
 8000f72:	e09d      	b.n	80010b0 <_printf_i+0x1e8>
 8000f74:	6833      	ldr	r3, [r6, #0]
 8000f76:	6820      	ldr	r0, [r4, #0]
 8000f78:	1d19      	adds	r1, r3, #4
 8000f7a:	6031      	str	r1, [r6, #0]
 8000f7c:	0606      	lsls	r6, r0, #24
 8000f7e:	d501      	bpl.n	8000f84 <_printf_i+0xbc>
 8000f80:	681d      	ldr	r5, [r3, #0]
 8000f82:	e003      	b.n	8000f8c <_printf_i+0xc4>
 8000f84:	0645      	lsls	r5, r0, #25
 8000f86:	d5fb      	bpl.n	8000f80 <_printf_i+0xb8>
 8000f88:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000f8c:	2d00      	cmp	r5, #0
 8000f8e:	da03      	bge.n	8000f98 <_printf_i+0xd0>
 8000f90:	232d      	movs	r3, #45	@ 0x2d
 8000f92:	426d      	negs	r5, r5
 8000f94:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f98:	4859      	ldr	r0, [pc, #356]	@ (8001100 <_printf_i+0x238>)
 8000f9a:	230a      	movs	r3, #10
 8000f9c:	e011      	b.n	8000fc2 <_printf_i+0xfa>
 8000f9e:	6821      	ldr	r1, [r4, #0]
 8000fa0:	6833      	ldr	r3, [r6, #0]
 8000fa2:	0608      	lsls	r0, r1, #24
 8000fa4:	f853 5b04 	ldr.w	r5, [r3], #4
 8000fa8:	d402      	bmi.n	8000fb0 <_printf_i+0xe8>
 8000faa:	0649      	lsls	r1, r1, #25
 8000fac:	bf48      	it	mi
 8000fae:	b2ad      	uxthmi	r5, r5
 8000fb0:	2f6f      	cmp	r7, #111	@ 0x6f
 8000fb2:	4853      	ldr	r0, [pc, #332]	@ (8001100 <_printf_i+0x238>)
 8000fb4:	6033      	str	r3, [r6, #0]
 8000fb6:	bf14      	ite	ne
 8000fb8:	230a      	movne	r3, #10
 8000fba:	2308      	moveq	r3, #8
 8000fbc:	2100      	movs	r1, #0
 8000fbe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000fc2:	6866      	ldr	r6, [r4, #4]
 8000fc4:	60a6      	str	r6, [r4, #8]
 8000fc6:	2e00      	cmp	r6, #0
 8000fc8:	bfa2      	ittt	ge
 8000fca:	6821      	ldrge	r1, [r4, #0]
 8000fcc:	f021 0104 	bicge.w	r1, r1, #4
 8000fd0:	6021      	strge	r1, [r4, #0]
 8000fd2:	b90d      	cbnz	r5, 8000fd8 <_printf_i+0x110>
 8000fd4:	2e00      	cmp	r6, #0
 8000fd6:	d04b      	beq.n	8001070 <_printf_i+0x1a8>
 8000fd8:	4616      	mov	r6, r2
 8000fda:	fbb5 f1f3 	udiv	r1, r5, r3
 8000fde:	fb03 5711 	mls	r7, r3, r1, r5
 8000fe2:	5dc7      	ldrb	r7, [r0, r7]
 8000fe4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000fe8:	462f      	mov	r7, r5
 8000fea:	42bb      	cmp	r3, r7
 8000fec:	460d      	mov	r5, r1
 8000fee:	d9f4      	bls.n	8000fda <_printf_i+0x112>
 8000ff0:	2b08      	cmp	r3, #8
 8000ff2:	d10b      	bne.n	800100c <_printf_i+0x144>
 8000ff4:	6823      	ldr	r3, [r4, #0]
 8000ff6:	07df      	lsls	r7, r3, #31
 8000ff8:	d508      	bpl.n	800100c <_printf_i+0x144>
 8000ffa:	6923      	ldr	r3, [r4, #16]
 8000ffc:	6861      	ldr	r1, [r4, #4]
 8000ffe:	4299      	cmp	r1, r3
 8001000:	bfde      	ittt	le
 8001002:	2330      	movle	r3, #48	@ 0x30
 8001004:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001008:	f106 36ff 	addle.w	r6, r6, #4294967295
 800100c:	1b92      	subs	r2, r2, r6
 800100e:	6122      	str	r2, [r4, #16]
 8001010:	f8cd a000 	str.w	sl, [sp]
 8001014:	464b      	mov	r3, r9
 8001016:	aa03      	add	r2, sp, #12
 8001018:	4621      	mov	r1, r4
 800101a:	4640      	mov	r0, r8
 800101c:	f7ff fee6 	bl	8000dec <_printf_common>
 8001020:	3001      	adds	r0, #1
 8001022:	d14a      	bne.n	80010ba <_printf_i+0x1f2>
 8001024:	f04f 30ff 	mov.w	r0, #4294967295
 8001028:	b004      	add	sp, #16
 800102a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800102e:	6823      	ldr	r3, [r4, #0]
 8001030:	f043 0320 	orr.w	r3, r3, #32
 8001034:	6023      	str	r3, [r4, #0]
 8001036:	4833      	ldr	r0, [pc, #204]	@ (8001104 <_printf_i+0x23c>)
 8001038:	2778      	movs	r7, #120	@ 0x78
 800103a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800103e:	6823      	ldr	r3, [r4, #0]
 8001040:	6831      	ldr	r1, [r6, #0]
 8001042:	061f      	lsls	r7, r3, #24
 8001044:	f851 5b04 	ldr.w	r5, [r1], #4
 8001048:	d402      	bmi.n	8001050 <_printf_i+0x188>
 800104a:	065f      	lsls	r7, r3, #25
 800104c:	bf48      	it	mi
 800104e:	b2ad      	uxthmi	r5, r5
 8001050:	6031      	str	r1, [r6, #0]
 8001052:	07d9      	lsls	r1, r3, #31
 8001054:	bf44      	itt	mi
 8001056:	f043 0320 	orrmi.w	r3, r3, #32
 800105a:	6023      	strmi	r3, [r4, #0]
 800105c:	b11d      	cbz	r5, 8001066 <_printf_i+0x19e>
 800105e:	2310      	movs	r3, #16
 8001060:	e7ac      	b.n	8000fbc <_printf_i+0xf4>
 8001062:	4827      	ldr	r0, [pc, #156]	@ (8001100 <_printf_i+0x238>)
 8001064:	e7e9      	b.n	800103a <_printf_i+0x172>
 8001066:	6823      	ldr	r3, [r4, #0]
 8001068:	f023 0320 	bic.w	r3, r3, #32
 800106c:	6023      	str	r3, [r4, #0]
 800106e:	e7f6      	b.n	800105e <_printf_i+0x196>
 8001070:	4616      	mov	r6, r2
 8001072:	e7bd      	b.n	8000ff0 <_printf_i+0x128>
 8001074:	6833      	ldr	r3, [r6, #0]
 8001076:	6825      	ldr	r5, [r4, #0]
 8001078:	6961      	ldr	r1, [r4, #20]
 800107a:	1d18      	adds	r0, r3, #4
 800107c:	6030      	str	r0, [r6, #0]
 800107e:	062e      	lsls	r6, r5, #24
 8001080:	681b      	ldr	r3, [r3, #0]
 8001082:	d501      	bpl.n	8001088 <_printf_i+0x1c0>
 8001084:	6019      	str	r1, [r3, #0]
 8001086:	e002      	b.n	800108e <_printf_i+0x1c6>
 8001088:	0668      	lsls	r0, r5, #25
 800108a:	d5fb      	bpl.n	8001084 <_printf_i+0x1bc>
 800108c:	8019      	strh	r1, [r3, #0]
 800108e:	2300      	movs	r3, #0
 8001090:	6123      	str	r3, [r4, #16]
 8001092:	4616      	mov	r6, r2
 8001094:	e7bc      	b.n	8001010 <_printf_i+0x148>
 8001096:	6833      	ldr	r3, [r6, #0]
 8001098:	1d1a      	adds	r2, r3, #4
 800109a:	6032      	str	r2, [r6, #0]
 800109c:	681e      	ldr	r6, [r3, #0]
 800109e:	6862      	ldr	r2, [r4, #4]
 80010a0:	2100      	movs	r1, #0
 80010a2:	4630      	mov	r0, r6
 80010a4:	f7ff f89c 	bl	80001e0 <memchr>
 80010a8:	b108      	cbz	r0, 80010ae <_printf_i+0x1e6>
 80010aa:	1b80      	subs	r0, r0, r6
 80010ac:	6060      	str	r0, [r4, #4]
 80010ae:	6863      	ldr	r3, [r4, #4]
 80010b0:	6123      	str	r3, [r4, #16]
 80010b2:	2300      	movs	r3, #0
 80010b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80010b8:	e7aa      	b.n	8001010 <_printf_i+0x148>
 80010ba:	6923      	ldr	r3, [r4, #16]
 80010bc:	4632      	mov	r2, r6
 80010be:	4649      	mov	r1, r9
 80010c0:	4640      	mov	r0, r8
 80010c2:	47d0      	blx	sl
 80010c4:	3001      	adds	r0, #1
 80010c6:	d0ad      	beq.n	8001024 <_printf_i+0x15c>
 80010c8:	6823      	ldr	r3, [r4, #0]
 80010ca:	079b      	lsls	r3, r3, #30
 80010cc:	d413      	bmi.n	80010f6 <_printf_i+0x22e>
 80010ce:	68e0      	ldr	r0, [r4, #12]
 80010d0:	9b03      	ldr	r3, [sp, #12]
 80010d2:	4298      	cmp	r0, r3
 80010d4:	bfb8      	it	lt
 80010d6:	4618      	movlt	r0, r3
 80010d8:	e7a6      	b.n	8001028 <_printf_i+0x160>
 80010da:	2301      	movs	r3, #1
 80010dc:	4632      	mov	r2, r6
 80010de:	4649      	mov	r1, r9
 80010e0:	4640      	mov	r0, r8
 80010e2:	47d0      	blx	sl
 80010e4:	3001      	adds	r0, #1
 80010e6:	d09d      	beq.n	8001024 <_printf_i+0x15c>
 80010e8:	3501      	adds	r5, #1
 80010ea:	68e3      	ldr	r3, [r4, #12]
 80010ec:	9903      	ldr	r1, [sp, #12]
 80010ee:	1a5b      	subs	r3, r3, r1
 80010f0:	42ab      	cmp	r3, r5
 80010f2:	dcf2      	bgt.n	80010da <_printf_i+0x212>
 80010f4:	e7eb      	b.n	80010ce <_printf_i+0x206>
 80010f6:	2500      	movs	r5, #0
 80010f8:	f104 0619 	add.w	r6, r4, #25
 80010fc:	e7f5      	b.n	80010ea <_printf_i+0x222>
 80010fe:	bf00      	nop
 8001100:	08001b76 	.word	0x08001b76
 8001104:	08001b87 	.word	0x08001b87

08001108 <__sflush_r>:
 8001108:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800110c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001110:	0716      	lsls	r6, r2, #28
 8001112:	4605      	mov	r5, r0
 8001114:	460c      	mov	r4, r1
 8001116:	d454      	bmi.n	80011c2 <__sflush_r+0xba>
 8001118:	684b      	ldr	r3, [r1, #4]
 800111a:	2b00      	cmp	r3, #0
 800111c:	dc02      	bgt.n	8001124 <__sflush_r+0x1c>
 800111e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001120:	2b00      	cmp	r3, #0
 8001122:	dd48      	ble.n	80011b6 <__sflush_r+0xae>
 8001124:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001126:	2e00      	cmp	r6, #0
 8001128:	d045      	beq.n	80011b6 <__sflush_r+0xae>
 800112a:	2300      	movs	r3, #0
 800112c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001130:	682f      	ldr	r7, [r5, #0]
 8001132:	6a21      	ldr	r1, [r4, #32]
 8001134:	602b      	str	r3, [r5, #0]
 8001136:	d030      	beq.n	800119a <__sflush_r+0x92>
 8001138:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800113a:	89a3      	ldrh	r3, [r4, #12]
 800113c:	0759      	lsls	r1, r3, #29
 800113e:	d505      	bpl.n	800114c <__sflush_r+0x44>
 8001140:	6863      	ldr	r3, [r4, #4]
 8001142:	1ad2      	subs	r2, r2, r3
 8001144:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001146:	b10b      	cbz	r3, 800114c <__sflush_r+0x44>
 8001148:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800114a:	1ad2      	subs	r2, r2, r3
 800114c:	2300      	movs	r3, #0
 800114e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001150:	6a21      	ldr	r1, [r4, #32]
 8001152:	4628      	mov	r0, r5
 8001154:	47b0      	blx	r6
 8001156:	1c43      	adds	r3, r0, #1
 8001158:	89a3      	ldrh	r3, [r4, #12]
 800115a:	d106      	bne.n	800116a <__sflush_r+0x62>
 800115c:	6829      	ldr	r1, [r5, #0]
 800115e:	291d      	cmp	r1, #29
 8001160:	d82b      	bhi.n	80011ba <__sflush_r+0xb2>
 8001162:	4a2a      	ldr	r2, [pc, #168]	@ (800120c <__sflush_r+0x104>)
 8001164:	410a      	asrs	r2, r1
 8001166:	07d6      	lsls	r6, r2, #31
 8001168:	d427      	bmi.n	80011ba <__sflush_r+0xb2>
 800116a:	2200      	movs	r2, #0
 800116c:	6062      	str	r2, [r4, #4]
 800116e:	04d9      	lsls	r1, r3, #19
 8001170:	6922      	ldr	r2, [r4, #16]
 8001172:	6022      	str	r2, [r4, #0]
 8001174:	d504      	bpl.n	8001180 <__sflush_r+0x78>
 8001176:	1c42      	adds	r2, r0, #1
 8001178:	d101      	bne.n	800117e <__sflush_r+0x76>
 800117a:	682b      	ldr	r3, [r5, #0]
 800117c:	b903      	cbnz	r3, 8001180 <__sflush_r+0x78>
 800117e:	6560      	str	r0, [r4, #84]	@ 0x54
 8001180:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001182:	602f      	str	r7, [r5, #0]
 8001184:	b1b9      	cbz	r1, 80011b6 <__sflush_r+0xae>
 8001186:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800118a:	4299      	cmp	r1, r3
 800118c:	d002      	beq.n	8001194 <__sflush_r+0x8c>
 800118e:	4628      	mov	r0, r5
 8001190:	f7ff fbf2 	bl	8000978 <_free_r>
 8001194:	2300      	movs	r3, #0
 8001196:	6363      	str	r3, [r4, #52]	@ 0x34
 8001198:	e00d      	b.n	80011b6 <__sflush_r+0xae>
 800119a:	2301      	movs	r3, #1
 800119c:	4628      	mov	r0, r5
 800119e:	47b0      	blx	r6
 80011a0:	4602      	mov	r2, r0
 80011a2:	1c50      	adds	r0, r2, #1
 80011a4:	d1c9      	bne.n	800113a <__sflush_r+0x32>
 80011a6:	682b      	ldr	r3, [r5, #0]
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d0c6      	beq.n	800113a <__sflush_r+0x32>
 80011ac:	2b1d      	cmp	r3, #29
 80011ae:	d001      	beq.n	80011b4 <__sflush_r+0xac>
 80011b0:	2b16      	cmp	r3, #22
 80011b2:	d11e      	bne.n	80011f2 <__sflush_r+0xea>
 80011b4:	602f      	str	r7, [r5, #0]
 80011b6:	2000      	movs	r0, #0
 80011b8:	e022      	b.n	8001200 <__sflush_r+0xf8>
 80011ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011be:	b21b      	sxth	r3, r3
 80011c0:	e01b      	b.n	80011fa <__sflush_r+0xf2>
 80011c2:	690f      	ldr	r7, [r1, #16]
 80011c4:	2f00      	cmp	r7, #0
 80011c6:	d0f6      	beq.n	80011b6 <__sflush_r+0xae>
 80011c8:	0793      	lsls	r3, r2, #30
 80011ca:	680e      	ldr	r6, [r1, #0]
 80011cc:	bf08      	it	eq
 80011ce:	694b      	ldreq	r3, [r1, #20]
 80011d0:	600f      	str	r7, [r1, #0]
 80011d2:	bf18      	it	ne
 80011d4:	2300      	movne	r3, #0
 80011d6:	eba6 0807 	sub.w	r8, r6, r7
 80011da:	608b      	str	r3, [r1, #8]
 80011dc:	f1b8 0f00 	cmp.w	r8, #0
 80011e0:	dde9      	ble.n	80011b6 <__sflush_r+0xae>
 80011e2:	6a21      	ldr	r1, [r4, #32]
 80011e4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80011e6:	4643      	mov	r3, r8
 80011e8:	463a      	mov	r2, r7
 80011ea:	4628      	mov	r0, r5
 80011ec:	47b0      	blx	r6
 80011ee:	2800      	cmp	r0, #0
 80011f0:	dc08      	bgt.n	8001204 <__sflush_r+0xfc>
 80011f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011f6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011fa:	81a3      	strh	r3, [r4, #12]
 80011fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001204:	4407      	add	r7, r0
 8001206:	eba8 0800 	sub.w	r8, r8, r0
 800120a:	e7e7      	b.n	80011dc <__sflush_r+0xd4>
 800120c:	dfbffffe 	.word	0xdfbffffe

08001210 <_fflush_r>:
 8001210:	b538      	push	{r3, r4, r5, lr}
 8001212:	690b      	ldr	r3, [r1, #16]
 8001214:	4605      	mov	r5, r0
 8001216:	460c      	mov	r4, r1
 8001218:	b913      	cbnz	r3, 8001220 <_fflush_r+0x10>
 800121a:	2500      	movs	r5, #0
 800121c:	4628      	mov	r0, r5
 800121e:	bd38      	pop	{r3, r4, r5, pc}
 8001220:	b118      	cbz	r0, 800122a <_fflush_r+0x1a>
 8001222:	6a03      	ldr	r3, [r0, #32]
 8001224:	b90b      	cbnz	r3, 800122a <_fflush_r+0x1a>
 8001226:	f7ff fa9f 	bl	8000768 <__sinit>
 800122a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800122e:	2b00      	cmp	r3, #0
 8001230:	d0f3      	beq.n	800121a <_fflush_r+0xa>
 8001232:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001234:	07d0      	lsls	r0, r2, #31
 8001236:	d404      	bmi.n	8001242 <_fflush_r+0x32>
 8001238:	0599      	lsls	r1, r3, #22
 800123a:	d402      	bmi.n	8001242 <_fflush_r+0x32>
 800123c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800123e:	f7ff fb98 	bl	8000972 <__retarget_lock_acquire_recursive>
 8001242:	4628      	mov	r0, r5
 8001244:	4621      	mov	r1, r4
 8001246:	f7ff ff5f 	bl	8001108 <__sflush_r>
 800124a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800124c:	07da      	lsls	r2, r3, #31
 800124e:	4605      	mov	r5, r0
 8001250:	d4e4      	bmi.n	800121c <_fflush_r+0xc>
 8001252:	89a3      	ldrh	r3, [r4, #12]
 8001254:	059b      	lsls	r3, r3, #22
 8001256:	d4e1      	bmi.n	800121c <_fflush_r+0xc>
 8001258:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800125a:	f7ff fb8b 	bl	8000974 <__retarget_lock_release_recursive>
 800125e:	e7dd      	b.n	800121c <_fflush_r+0xc>

08001260 <__swbuf_r>:
 8001260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001262:	460e      	mov	r6, r1
 8001264:	4614      	mov	r4, r2
 8001266:	4605      	mov	r5, r0
 8001268:	b118      	cbz	r0, 8001272 <__swbuf_r+0x12>
 800126a:	6a03      	ldr	r3, [r0, #32]
 800126c:	b90b      	cbnz	r3, 8001272 <__swbuf_r+0x12>
 800126e:	f7ff fa7b 	bl	8000768 <__sinit>
 8001272:	69a3      	ldr	r3, [r4, #24]
 8001274:	60a3      	str	r3, [r4, #8]
 8001276:	89a3      	ldrh	r3, [r4, #12]
 8001278:	071a      	lsls	r2, r3, #28
 800127a:	d501      	bpl.n	8001280 <__swbuf_r+0x20>
 800127c:	6923      	ldr	r3, [r4, #16]
 800127e:	b943      	cbnz	r3, 8001292 <__swbuf_r+0x32>
 8001280:	4621      	mov	r1, r4
 8001282:	4628      	mov	r0, r5
 8001284:	f000 f82a 	bl	80012dc <__swsetup_r>
 8001288:	b118      	cbz	r0, 8001292 <__swbuf_r+0x32>
 800128a:	f04f 37ff 	mov.w	r7, #4294967295
 800128e:	4638      	mov	r0, r7
 8001290:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001292:	6823      	ldr	r3, [r4, #0]
 8001294:	6922      	ldr	r2, [r4, #16]
 8001296:	1a98      	subs	r0, r3, r2
 8001298:	6963      	ldr	r3, [r4, #20]
 800129a:	b2f6      	uxtb	r6, r6
 800129c:	4283      	cmp	r3, r0
 800129e:	4637      	mov	r7, r6
 80012a0:	dc05      	bgt.n	80012ae <__swbuf_r+0x4e>
 80012a2:	4621      	mov	r1, r4
 80012a4:	4628      	mov	r0, r5
 80012a6:	f7ff ffb3 	bl	8001210 <_fflush_r>
 80012aa:	2800      	cmp	r0, #0
 80012ac:	d1ed      	bne.n	800128a <__swbuf_r+0x2a>
 80012ae:	68a3      	ldr	r3, [r4, #8]
 80012b0:	3b01      	subs	r3, #1
 80012b2:	60a3      	str	r3, [r4, #8]
 80012b4:	6823      	ldr	r3, [r4, #0]
 80012b6:	1c5a      	adds	r2, r3, #1
 80012b8:	6022      	str	r2, [r4, #0]
 80012ba:	701e      	strb	r6, [r3, #0]
 80012bc:	6962      	ldr	r2, [r4, #20]
 80012be:	1c43      	adds	r3, r0, #1
 80012c0:	429a      	cmp	r2, r3
 80012c2:	d004      	beq.n	80012ce <__swbuf_r+0x6e>
 80012c4:	89a3      	ldrh	r3, [r4, #12]
 80012c6:	07db      	lsls	r3, r3, #31
 80012c8:	d5e1      	bpl.n	800128e <__swbuf_r+0x2e>
 80012ca:	2e0a      	cmp	r6, #10
 80012cc:	d1df      	bne.n	800128e <__swbuf_r+0x2e>
 80012ce:	4621      	mov	r1, r4
 80012d0:	4628      	mov	r0, r5
 80012d2:	f7ff ff9d 	bl	8001210 <_fflush_r>
 80012d6:	2800      	cmp	r0, #0
 80012d8:	d0d9      	beq.n	800128e <__swbuf_r+0x2e>
 80012da:	e7d6      	b.n	800128a <__swbuf_r+0x2a>

080012dc <__swsetup_r>:
 80012dc:	b538      	push	{r3, r4, r5, lr}
 80012de:	4b29      	ldr	r3, [pc, #164]	@ (8001384 <__swsetup_r+0xa8>)
 80012e0:	4605      	mov	r5, r0
 80012e2:	6818      	ldr	r0, [r3, #0]
 80012e4:	460c      	mov	r4, r1
 80012e6:	b118      	cbz	r0, 80012f0 <__swsetup_r+0x14>
 80012e8:	6a03      	ldr	r3, [r0, #32]
 80012ea:	b90b      	cbnz	r3, 80012f0 <__swsetup_r+0x14>
 80012ec:	f7ff fa3c 	bl	8000768 <__sinit>
 80012f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012f4:	0719      	lsls	r1, r3, #28
 80012f6:	d422      	bmi.n	800133e <__swsetup_r+0x62>
 80012f8:	06da      	lsls	r2, r3, #27
 80012fa:	d407      	bmi.n	800130c <__swsetup_r+0x30>
 80012fc:	2209      	movs	r2, #9
 80012fe:	602a      	str	r2, [r5, #0]
 8001300:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001304:	81a3      	strh	r3, [r4, #12]
 8001306:	f04f 30ff 	mov.w	r0, #4294967295
 800130a:	e033      	b.n	8001374 <__swsetup_r+0x98>
 800130c:	0758      	lsls	r0, r3, #29
 800130e:	d512      	bpl.n	8001336 <__swsetup_r+0x5a>
 8001310:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001312:	b141      	cbz	r1, 8001326 <__swsetup_r+0x4a>
 8001314:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001318:	4299      	cmp	r1, r3
 800131a:	d002      	beq.n	8001322 <__swsetup_r+0x46>
 800131c:	4628      	mov	r0, r5
 800131e:	f7ff fb2b 	bl	8000978 <_free_r>
 8001322:	2300      	movs	r3, #0
 8001324:	6363      	str	r3, [r4, #52]	@ 0x34
 8001326:	89a3      	ldrh	r3, [r4, #12]
 8001328:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800132c:	81a3      	strh	r3, [r4, #12]
 800132e:	2300      	movs	r3, #0
 8001330:	6063      	str	r3, [r4, #4]
 8001332:	6923      	ldr	r3, [r4, #16]
 8001334:	6023      	str	r3, [r4, #0]
 8001336:	89a3      	ldrh	r3, [r4, #12]
 8001338:	f043 0308 	orr.w	r3, r3, #8
 800133c:	81a3      	strh	r3, [r4, #12]
 800133e:	6923      	ldr	r3, [r4, #16]
 8001340:	b94b      	cbnz	r3, 8001356 <__swsetup_r+0x7a>
 8001342:	89a3      	ldrh	r3, [r4, #12]
 8001344:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001348:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800134c:	d003      	beq.n	8001356 <__swsetup_r+0x7a>
 800134e:	4621      	mov	r1, r4
 8001350:	4628      	mov	r0, r5
 8001352:	f000 f84f 	bl	80013f4 <__smakebuf_r>
 8001356:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800135a:	f013 0201 	ands.w	r2, r3, #1
 800135e:	d00a      	beq.n	8001376 <__swsetup_r+0x9a>
 8001360:	2200      	movs	r2, #0
 8001362:	60a2      	str	r2, [r4, #8]
 8001364:	6962      	ldr	r2, [r4, #20]
 8001366:	4252      	negs	r2, r2
 8001368:	61a2      	str	r2, [r4, #24]
 800136a:	6922      	ldr	r2, [r4, #16]
 800136c:	b942      	cbnz	r2, 8001380 <__swsetup_r+0xa4>
 800136e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001372:	d1c5      	bne.n	8001300 <__swsetup_r+0x24>
 8001374:	bd38      	pop	{r3, r4, r5, pc}
 8001376:	0799      	lsls	r1, r3, #30
 8001378:	bf58      	it	pl
 800137a:	6962      	ldrpl	r2, [r4, #20]
 800137c:	60a2      	str	r2, [r4, #8]
 800137e:	e7f4      	b.n	800136a <__swsetup_r+0x8e>
 8001380:	2000      	movs	r0, #0
 8001382:	e7f7      	b.n	8001374 <__swsetup_r+0x98>
 8001384:	2000000c 	.word	0x2000000c

08001388 <_sbrk_r>:
 8001388:	b538      	push	{r3, r4, r5, lr}
 800138a:	4d06      	ldr	r5, [pc, #24]	@ (80013a4 <_sbrk_r+0x1c>)
 800138c:	2300      	movs	r3, #0
 800138e:	4604      	mov	r4, r0
 8001390:	4608      	mov	r0, r1
 8001392:	602b      	str	r3, [r5, #0]
 8001394:	f7ff f81c 	bl	80003d0 <_sbrk>
 8001398:	1c43      	adds	r3, r0, #1
 800139a:	d102      	bne.n	80013a2 <_sbrk_r+0x1a>
 800139c:	682b      	ldr	r3, [r5, #0]
 800139e:	b103      	cbz	r3, 80013a2 <_sbrk_r+0x1a>
 80013a0:	6023      	str	r3, [r4, #0]
 80013a2:	bd38      	pop	{r3, r4, r5, pc}
 80013a4:	200001b8 	.word	0x200001b8

080013a8 <__swhatbuf_r>:
 80013a8:	b570      	push	{r4, r5, r6, lr}
 80013aa:	460c      	mov	r4, r1
 80013ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013b0:	2900      	cmp	r1, #0
 80013b2:	b096      	sub	sp, #88	@ 0x58
 80013b4:	4615      	mov	r5, r2
 80013b6:	461e      	mov	r6, r3
 80013b8:	da0d      	bge.n	80013d6 <__swhatbuf_r+0x2e>
 80013ba:	89a3      	ldrh	r3, [r4, #12]
 80013bc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80013c0:	f04f 0100 	mov.w	r1, #0
 80013c4:	bf14      	ite	ne
 80013c6:	2340      	movne	r3, #64	@ 0x40
 80013c8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80013cc:	2000      	movs	r0, #0
 80013ce:	6031      	str	r1, [r6, #0]
 80013d0:	602b      	str	r3, [r5, #0]
 80013d2:	b016      	add	sp, #88	@ 0x58
 80013d4:	bd70      	pop	{r4, r5, r6, pc}
 80013d6:	466a      	mov	r2, sp
 80013d8:	f000 f848 	bl	800146c <_fstat_r>
 80013dc:	2800      	cmp	r0, #0
 80013de:	dbec      	blt.n	80013ba <__swhatbuf_r+0x12>
 80013e0:	9901      	ldr	r1, [sp, #4]
 80013e2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80013e6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80013ea:	4259      	negs	r1, r3
 80013ec:	4159      	adcs	r1, r3
 80013ee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80013f2:	e7eb      	b.n	80013cc <__swhatbuf_r+0x24>

080013f4 <__smakebuf_r>:
 80013f4:	898b      	ldrh	r3, [r1, #12]
 80013f6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013f8:	079d      	lsls	r5, r3, #30
 80013fa:	4606      	mov	r6, r0
 80013fc:	460c      	mov	r4, r1
 80013fe:	d507      	bpl.n	8001410 <__smakebuf_r+0x1c>
 8001400:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001404:	6023      	str	r3, [r4, #0]
 8001406:	6123      	str	r3, [r4, #16]
 8001408:	2301      	movs	r3, #1
 800140a:	6163      	str	r3, [r4, #20]
 800140c:	b003      	add	sp, #12
 800140e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001410:	ab01      	add	r3, sp, #4
 8001412:	466a      	mov	r2, sp
 8001414:	f7ff ffc8 	bl	80013a8 <__swhatbuf_r>
 8001418:	9f00      	ldr	r7, [sp, #0]
 800141a:	4605      	mov	r5, r0
 800141c:	4639      	mov	r1, r7
 800141e:	4630      	mov	r0, r6
 8001420:	f7ff fb16 	bl	8000a50 <_malloc_r>
 8001424:	b948      	cbnz	r0, 800143a <__smakebuf_r+0x46>
 8001426:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800142a:	059a      	lsls	r2, r3, #22
 800142c:	d4ee      	bmi.n	800140c <__smakebuf_r+0x18>
 800142e:	f023 0303 	bic.w	r3, r3, #3
 8001432:	f043 0302 	orr.w	r3, r3, #2
 8001436:	81a3      	strh	r3, [r4, #12]
 8001438:	e7e2      	b.n	8001400 <__smakebuf_r+0xc>
 800143a:	89a3      	ldrh	r3, [r4, #12]
 800143c:	6020      	str	r0, [r4, #0]
 800143e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001442:	81a3      	strh	r3, [r4, #12]
 8001444:	9b01      	ldr	r3, [sp, #4]
 8001446:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800144a:	b15b      	cbz	r3, 8001464 <__smakebuf_r+0x70>
 800144c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001450:	4630      	mov	r0, r6
 8001452:	f000 f81d 	bl	8001490 <_isatty_r>
 8001456:	b128      	cbz	r0, 8001464 <__smakebuf_r+0x70>
 8001458:	89a3      	ldrh	r3, [r4, #12]
 800145a:	f023 0303 	bic.w	r3, r3, #3
 800145e:	f043 0301 	orr.w	r3, r3, #1
 8001462:	81a3      	strh	r3, [r4, #12]
 8001464:	89a3      	ldrh	r3, [r4, #12]
 8001466:	431d      	orrs	r5, r3
 8001468:	81a5      	strh	r5, [r4, #12]
 800146a:	e7cf      	b.n	800140c <__smakebuf_r+0x18>

0800146c <_fstat_r>:
 800146c:	b538      	push	{r3, r4, r5, lr}
 800146e:	4d07      	ldr	r5, [pc, #28]	@ (800148c <_fstat_r+0x20>)
 8001470:	2300      	movs	r3, #0
 8001472:	4604      	mov	r4, r0
 8001474:	4608      	mov	r0, r1
 8001476:	4611      	mov	r1, r2
 8001478:	602b      	str	r3, [r5, #0]
 800147a:	f7fe ff80 	bl	800037e <_fstat>
 800147e:	1c43      	adds	r3, r0, #1
 8001480:	d102      	bne.n	8001488 <_fstat_r+0x1c>
 8001482:	682b      	ldr	r3, [r5, #0]
 8001484:	b103      	cbz	r3, 8001488 <_fstat_r+0x1c>
 8001486:	6023      	str	r3, [r4, #0]
 8001488:	bd38      	pop	{r3, r4, r5, pc}
 800148a:	bf00      	nop
 800148c:	200001b8 	.word	0x200001b8

08001490 <_isatty_r>:
 8001490:	b538      	push	{r3, r4, r5, lr}
 8001492:	4d06      	ldr	r5, [pc, #24]	@ (80014ac <_isatty_r+0x1c>)
 8001494:	2300      	movs	r3, #0
 8001496:	4604      	mov	r4, r0
 8001498:	4608      	mov	r0, r1
 800149a:	602b      	str	r3, [r5, #0]
 800149c:	f7fe ff7f 	bl	800039e <_isatty>
 80014a0:	1c43      	adds	r3, r0, #1
 80014a2:	d102      	bne.n	80014aa <_isatty_r+0x1a>
 80014a4:	682b      	ldr	r3, [r5, #0]
 80014a6:	b103      	cbz	r3, 80014aa <_isatty_r+0x1a>
 80014a8:	6023      	str	r3, [r4, #0]
 80014aa:	bd38      	pop	{r3, r4, r5, pc}
 80014ac:	200001b8 	.word	0x200001b8

080014b0 <_init>:
 80014b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b2:	bf00      	nop
 80014b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014b6:	bc08      	pop	{r3}
 80014b8:	469e      	mov	lr, r3
 80014ba:	4770      	bx	lr

080014bc <_fini>:
 80014bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014be:	bf00      	nop
 80014c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014c2:	bc08      	pop	{r3}
 80014c4:	469e      	mov	lr, r3
 80014c6:	4770      	bx	lr
